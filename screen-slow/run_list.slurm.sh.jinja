#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=4:00:00
#SBATCH --mem=24G
#SBATCH --ntasks 1
#SBATCH --cpus-per-task 24
#SBATCH --job-name s-{{ seed }}-{{ cur_step }}
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%j.out"

################################################################################
echo
echo "Setup Exit and Error Traps"
echo "--------------------------"
################################################################################

function on_exit() {

  echo
  echo "Run Exit Trap"
  echo "-------------"

  qstat -f ${SLURM_JOB_ID}

  cp ${SLURM_LOGPATH} .

}

function on_error() {

  echo
  echo "Run Error Trap (FAIL)"
  echo "---------------------"

  echo "   EXIT STATUS ${1}"
  echo "   LINE NO ${2}"

  cp ${SLURM_LOGPATH} "/mnt/home/mmore500/err_slurmlogs"

  qstat -f ${SLURM_JOB_ID}                                                     \
    >> "/mnt/home/mmore500/err_slurmlogs/${SLURM_LOGFILE}"

}

trap 'on_error $? $LINENO' ERR
trap "on_exit" EXIT


################################################################################
echo
echo "Prepare Env Vars"
echo "----------------"
################################################################################

SEED={{ seed }} # jinja
LAST_STEP={{ last_step }} # jinja
CUR_STEP={{ cur_step }} # jinja
OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny-screen/seed=${SEED}+step=${CUR_STEP}"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/screen-slow/"
SOURCE_DIR="/mnt/scratch/mmore500/dishtiny-screen/seed=${SEED}+step=${LAST_STEP}"

echo "   SEED" $SEED
echo "   LAST_STEP" $LAST_STEP
echo "   CUR_STEP" $CUR_STEP
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR
echo "   SOURCE_DIR" $SOURCE_DIR

export SLURM_LOGFILE="slurm-${SLURM_JOB_ID}.out"
export SLURM_LOGPATH="/mnt/home/mmore500/slurmlogs/${SLURM_LOGFILE}"

echo "   SLURM_LOGFILE" $SLURM_LOGFILE
echo "   SLURM_LOGPATH" $SLURM_LOGPATH

################################################################################
echo
echo "Setup Work Dir"
echo "--------------"
################################################################################

rm -rf ${OUTPUT_DIR}/* || echo "   not a redo"  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}
echo "   PWD" $PWD

# prepare python environment
module purge; module load GCC/7.3.0-2.30 OpenMPI/3.1.1 Python/3.6.6
source "/mnt/home/mmore500/myPy/bin/activate"

# get seed population from preceeding run
MAX_UPDATE=$(python3 -c "import sys; from keyname import keyname as kn; print( \
  max(                                                                         \
    int(kn.unpack(filename)['update'])                                         \
    for filename in sys.argv[1:]                                               \
  )                                                                            \
)" "${SOURCE_DIR}/"*".json.cereal")
echo "   MAX_UPDATE" $MAX_UPDATE

mkdir seedpop
cp "${SOURCE_DIR}/"*"+update=${MAX_UPDATE}+"*".json.cereal" seedpop
for f in $(ls seedpop); do mv "seedpop/${f}" "seedpop/id=1+${f}"; done

################################################################################
echo
echo "Do Work"
echo "-------"
################################################################################

module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;

./dishtiny -SEED $(( ${SEED} + ${CUR_STEP} )) -SEED_POP 1 >run.log 2>&1

################################################################################
echo
echo "Submit Next Job"
echo "---------------"
################################################################################

# export information so jinja can use it
export seed={{ seed }} # jinja
export last_step={{ cur_step }} # jinja; aka cur step wrt this script
export cur_step=$(( {{ cur_step }} + 1 )) # jinja; aka next step wrt this script

echo "   seed" $seed
echo "   last_step" $last_step
echo "   cur_step" $cur_step

# prepare python environment
module purge; module load GCC/7.3.0-2.30 OpenMPI/3.1.1 Python/3.6.6
source "/mnt/home/mmore500/myPy/bin/activate"

# run jinja on template
j2 -o run_list.slurm.sh run_list.slurm.sh.jinja

if  [ {{ cur_step }} -lt 24 ]; then
  if ls *.json.cereal | grep -q "update\=65536"; then
    sbatch run_list.slurm.sh                                                   \
    && echo "   job submit success!"                                           \
    || echo "   job submit failure (FAIL)" && exit 65535
  else
    echo "   missing final population... job incomplete? (FAIL)"
    exit 65536
  fi
else
  echo "   nevermind, all done! (COMPLETE)"
fi

################################################################################
echo
echo "Done! (SUCCESS)"
echo "---------------"
################################################################################
