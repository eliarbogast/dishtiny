# only build pull requests and merges to master or dev
# adapted from https://stackoverflow.com/a/31882307
if: (type = push AND branch IN (master, dev)) OR (type = pull_request AND NOT branch =~ /no-ci/)
dist: xenial
sudo: required

services:
- docker

jobs:
  include:
  - stage: Docker Build
    script:
    - docker build -t "mmore500/dishtiny:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" .
    - docker ps -a
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push "mmore500/dishtiny:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}"

  - stage: Tests

    name: Unit Tests (clang, debug mode)
    env: DISH_MPICXX=mpicxx.openmpi OMPI_CXX=clang++
    script:
    - sudo docker run -e CXX -e DISH_MPICXX -e OMPI_CXX --cap-add=SYS_ADMIN -i "mmore500/dishtiny:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "set -x && cd /opt/dishtiny/tests && make"

  - name: Unit Tests (gcc, debug mode)
    env: DISH_MPICXX=mpicxx.openmpi OMPI_CXX=g++
    script:
    - sudo docker run -e CXX -e DISH_MPICXX -e OMPI_CXX --cap-add=SYS_ADMIN -i "mmore500/dishtiny:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "set -x && cd /opt/dishtiny/tests && make"

  - name: Unit Tests (clang, full debug mode)
    env: DISH_MPICXX=mpicxx.openmpi OMPI_CXX=clang++
    script:
    - sudo docker run -e CXX -e DISH_MPICXX -e OMPI_CXX --cap-add=SYS_ADMIN -i "mmore500/dishtiny:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "set -x && cd /opt/dishtiny/tests && make fulldebug"

  - name: Unit Tests (gcc, full debug mode)
    env: DISH_MPICXX=mpicxx.openmpi OMPI_CXX=g++
    script:
    - sudo docker run -e CXX -e DISH_MPICXX -e OMPI_CXX --cap-add=SYS_ADMIN -i "mmore500/dishtiny:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "set -x && cd /opt/dishtiny/tests && make fulldebug"

  - name: Unit Tests (clang, opt mode)
    env: DISH_MPICXX=mpicxx.openmpi OMPI_CXX=clang++
    script:
    - sudo docker run -e CXX -e DISH_MPICXX -e OMPI_CXX --cap-add=SYS_ADMIN -i "mmore500/dishtiny:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "set -x && cd /opt/dishtiny/tests && make opt"

  - name: Unit Tests (gcc, opt mode)
    env: DISH_MPICXX=mpicxx.openmpi OMPI_CXX=g++
    script:
    - sudo docker run -e CXX -e DISH_MPICXX -e OMPI_CXX --cap-add=SYS_ADMIN -i "mmore500/dishtiny:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "set -x && cd /opt/dishtiny/tests && make opt"

  - name: Coverage
    env: DISH_MPICXX=mpicxx.openmpi OMPI_CXX=clang++
    script:
    - ci_env=`bash <(curl -s https://codecov.io/env)`
    - sudo docker run $ci_env -e DISH_MPICXX -e OMPI_CXX "mmore500/dishtiny:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/dishtiny && make coverage && bash <(curl -s https://codecov.io/bash)"

  - name: Fuzzing
    script:
    - sudo docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -e CXX mmore500/dishtiny:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER} /bin/bash -c "cd /opt/dishtiny/fuzzing && make && make opt"

  - name: Microbenchmarks
    script:
    - sudo docker run -e OSF_USERNAME -e OSF_PASSWORD -e CONTEXT=travis "mmore500/dishtiny:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/dishtiny/microbenchmarks && make"

  - name: Source (clang)
    env: DISH_MPICXX=mpicxx.openmpi OMPI_CXX=clang++
    script:
    - sudo docker run -e DISH_MPICXX -e OMPI_CXX --cap-add=SYS_ADMIN "mmore500/dishtiny:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/dishtiny && make test"

  - name: Source (gcc)
    env: DISH_MPICXX=mpicxx.openmpi OMPI_CXX=g++
    script:
    - sudo docker run -e DISH_MPICXX -e OMPI_CXX --cap-add=SYS_ADMIN "mmore500/dishtiny:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/dishtiny && make test"

  - name: Docs, Miscellaneous
    script: docker run "mmore500/dishtiny:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/dishtiny && ./ci/test_trailing_whitespace.sh && ./ci/test_tabs.sh && ./ci/test_missing_newlines.sh && make docs && ./ci/test_headerguards.sh && ./ci/test_alphabetize_includes.sh && python3 ci/test_readme_snippets.py"


  - stage: Deploy
    name: GitHub Pages
    if: (type = push AND branch IN (master))
    script:
    - docker run -e GH_TOKEN -e TRAVIS_BUILD_NUMBER mmore500/dishtiny /bin/bash -c "cd /opt/dishtiny && ./ci/deploy_gh_pages.sh"

  - name: DockerHub
    if: (type = push AND branch IN (master))
    script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker pull "mmore500/dishtiny:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}"
    - docker tag "mmore500/dishtiny:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" "mmore500/dishtiny:latest"
    - docker push "mmore500/dishtiny:latest"

env:
  global:
  - secure: gblaGJKWxavqZxJYe6+E0Z9taszJdqtisvFWuJ7+k3OhEALint6Q3GyXxCbG6XWX7MzMlA9Hs6fe2FopnSCRtvqDZkl/0Yv+u95PG3W5/kX8WfpHNAsWpRBMj3ELyVuECHe2S0MYyn6mscacMF45s5MHQmiXeU9uAMwW12XC0afn1NbMu1EK8f14AkuyIETmGOrgExR81QeK9oHlWKdCN8v5n34xWrhncN93phnnbaVzvV/l8kIMVadMw+ZmUCCCnXJfvhzZkwk6+36o9PrY3nnojy+p6jpp3l2975bs3vOiryh1D4hyVWtch/kcm1hploG1UUElDz2LbnXSAxDgL3Y7dSKuvQtJrccrzKgd0C7wGq3MIuHs27hty/hcX5pslyRDTy2UKMLHnoyVJBpA308mAK+T9w+mKV36LlIg2dXDkj3nYyDxxuc6n8UJNS2Qoo2A2J+Ctbj8D75SkV1jFQpl7YamcJ12RWPp4VvG09RR6UfeXOsQw1v5yUldYAmrUqFRjh9Ylyy+LSHo23IYbpRLVBqY+oR1TbSHDW0xs6AfNtOhQ3kMZflov6tyIiY1P7kTtCU/ZwscbSbiZ6alnU6X6BMzcDd3HiqSPKX4e/vVjggtHr/2l3jBZshSjv63Z7R0hwHXHgtayuDhkUr1mR0mIVeOuryiUSrIfmLlbOI=
  - secure: bgFiRQ1O7qaxXVHDlTyf83v/24QSrjoEmxXaQIoK615XzJxMsvd5snQQadwigqqVVOWLtQNyO/NmGRtr0OCND5l/oCyzpjjjNL8DLvwU8+mqdCHN802Tn0YTkyvTxrbSc+AIihkeIgA935pasm85PCS3u3Rzjq9gvAgOGkPuIlAZl/yhLoCZx5fu9M5Z2c6OlrYFs3TsoOheZu66VaBqHm1xX7asFRXrPW0Q0gFxzw7UL+3O9xdXZEKjoTZR9qDx2MCpCqTmRtrW95FKg9G2f/G5t/8xxk8HU9qsSq4VK8whyFFfU22P6p0zW3qI5C7bZUJro5vdBWTicORRYXQWLdtpYzcxbgahVrVWknXDYtHucccAXa6pBedqs9Walj2MQO3lpFXJvh6ZTmXtqwLLKxT0ML+wU3nsZFY73tzuqGdTxm3Vr+QguwQL14WXHu0UDNsTNYfz8c4cA73zsGAsFWPgjfe1vKPbl3gsVs+3U12e4JvXhY6b1No4O7f0oxuVad+YGO0iAqQvouI10PxTOdhPhH3YVc736OpabyD7/QkjAW4Gjd6oFjam7tiw5mdzuot0LbIjjGP74bENvp8fNgxK3WORplhcQfTGE8p1Rym4xy0AAw38+7x6+XaWUXdBiA6k6vvWHDIRbjpbq+Q7jjycgocFEJe0eyc16rkvyH4=
  - secure: aCpIKl6SWhJ2mQE1GMnDV1FYxB2Hs7wX9u4Q1W/x8W75yDu9oqlz3EtGfG80RmjtaSb/4DwDj17vKDoRTPoMlFfiD8r+wa/56hp7Ct4qoVMsIjL4aih26CqGWH6wBDfDa4QBc9EspzRYDkLHIIC7nAML7oez3rqcNkX/w0Jg3V89NetsePYFYE6VdbZQSzyRvxTCbHOX2fiFpBthoqMPPH49NKzVxv0K/Fvq0yyzRqUvn5btZpnEtqxIvj7A0CZj/SnhcMlPgwTBVofiU1xgafuV5Ygd4GoqjTfGhRroDR8zebZbS+8POZVOLjj1/zHDjyPDWv3cbRRSqsZ5fU+/dHdqys4k0Mr4kxufBpl91KIfyyQZozJXl9nThcnCvk6q6CvbOJky1xQVPVEFiFFlaui6Qp2i8F/Ivl6qjfw4BGts0pDiJEZvr4YwD+fc223YJO6DdUeZj7qNG06ak3VSv7LPNcPBlN82Wq+fOjBcUSr/cyjmFj9HSdzaOvM1XlJjHOdKa8XaP6dnUfaApacP5S/O4I+FzziSqJyPW3Z+sxcAjOBfndoBG1lgHzJmUH0DVqeFg9MquFF3Vmm+8nBjIgNNskuoeGbLiiAFW8Zf/jO0uwenW/sNIrBNaF+qLTLP22c57MJqkTKlt0fGkuJd2dSlUX2PrSToiQrLutrYnNU=
  - secure: lUkrFhPBdYC/f33VyU5u5pb6eyBEPqOyMFG6CW6Nopwv9P8MHjeqTR6LBdWFQgIf2vTr8csjd0OQw0vbU62/qeZ2Qi3PzzWzn0Pt0yZEQuPejWCUjEVPgigrdw5/cgDiKlxlwuxLJiWI6kznZP6ak+sDQr8CroWiJGV/OfD8Rz3nGLG808+InrGXWJqM4iiGMHzFfOka+VoPzt/nGjf1chgq+4LVlJomUoe81GwCKo5N6UwpQooi4fvw9UgV15eB540M9ZBoW6473GawxTF3TV/dJ9lQjEaY6x7n4CylM7ctWEuwCRHJ7VAM2QcvZcUorhHeBN8hs3QSSt5zha6Hi9izBqJBu2+QN6z+dP6Vr+pzJouFf9bNL0TRWal8aMHtS/JCZGfoqtJMMKRO9SxRnF0YWuTsrcixFrmp9HQqvD+FpUp03SedITPAlwHy+IPFqw8FSmjUnojZhbViYCnMKAD5aFbgYn2EofY89x4WSvbWa6d+f+XuUgqu8EdZNzS+BARfW8iKSKQIXesjLB63czjV6LyzY/5HwdM4zDMWmjwz+EdcttzaV3AVesskvO1443uQd5UAXwLZR2sj4iFt3LwHAs73UMJUoAW0y75+75h6T44d/Ml3QelJQVF97zS6stWryxTtaL40ij8B7cRp4bcPSZmVgVyFCppOWhlktW4=
  - secure: pJC+oPEYlWK5ee8D3OatnMY5k6KQlRV63o/toI3RFGe8tk1R7w2AK2L3fEgKpv5/2VV/bYrQOplaMd2ph1Xa/5RT/Lhxl+g4HjfVqdWxU7QMCXXsQ0WgaYVat1qwHutpkT5G0mUF2y5T4uXNigMTwKPsCz7C/kn+UaUd7PWOX8UuKD/1aT5jWim7nTT0bxsdIr2JQLzhJ+TFVvN/5926XAYQDf2i8q7z9qBx7PvwotzDN6U9qeAlouh5puaRJ7qIx5edEcpNP3BlqCo5HKwVMhrxzs1Hacn/UL606ukas626TkM3inpjTl30IBiiBAmD3pHYjY/iQrWd2RSGArm9BUJOcV4avPOC36i5r0JOiu0zr327TqBaS+9JMqQjGGccyB+0dtsbVTNo4fk+2YCr0r9cn5kUzwzZMGDKblxZLZizRKNbIdogKbT3p9zEQdaZHJfNmnSkpE5U1fl0CjHYbbfWoHjgoXKse8u97NLsv8zeiNfM7S2YY53VfTHK4565zTOgq6aQ0RToIbCYEqoJm3xH0WwbtLrfyT8EMZIS3Jcl98ZjpSFDJUx3rNtrSsUhC8o8w0ALJShi+7getjIekUkI9DWMVdO5YjCpTpfuajw6gWm1aHVB7xgo9Tkri83xCvugljJYJYEkfdpsjsoYOCIO5Ka2gN3iBrfKNDlUhhQ=
