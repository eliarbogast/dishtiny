### empty ###
# here to suppress unable to open file pop-ups on web viewer
### empty ###
# here to suppress unable to open file pop-ups on web viewer
### empty ###
# here to suppress unable to open file pop-ups on web viewer
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 8           # How far can a signal propagate?
set EVENT_RADIUS 2             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0            # How much resource benefit does a successful harvest grant?
set ACTIVATION_COST 0          # How much resource is spent to attempt a harvest?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=167:00:00         # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-40
#SBATCH --mem=8G                # memory required per node - amount of memory (in bytes)
#SBATCH --job-name treat=resource-even__channelsense-yes__nlev-two     # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="treat=resource-even__channelsense-yes__nlev-two"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/request/"${TREATMENT}

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Setup DMTCP"
# https://wiki.hpcc.msu.edu/display/ITH/Checkpoint+with+DMTCP
################################################################################

# set a limited stack size so DMTCP could work
ulimit -s 8192

# save coordinators host info in an environment variable
export DMTCP_COORD_HOST=$(hostname)

# ask for a uniqe port at runtime
export DMTCP_COORD_PORT=0

# checkpoint every eight hours
CKPT_WAIT_SEC=$(( 8 * 60 * 60 ))

# back up checkpoints every hour
BAK_WAIT_SEC=$(( 1 * 60 * 60 ))

echo "   DMTCP_COORD_HOST" $DMTCP_COORD_HOST
echo "   DMTCP_COORD_PORT" $DMTCP_COORD_PORT
echo "   CKPT_WAIT_SEC" $CKPT_WAIT_SEC
echo "   BAK_WAIT_SEC" $BAK_WAIT_SEC

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;

# set up background loop
# so we always have at least one previous checkpoint and file state
# mkdir checkpoint_bak
# touch checkpoint_bak/init.dmtcp
# while true; do
#   echo "   BAK SLEEP" $(date)
#   sleep $BAK_WAIT_SEC
#   echo "   BAK WAKE" $(date)
#   # if we have a new checkpoint, shuffle the backups
#   if ! diff *.dmtcp checkpoint_bak/*.dmtcp; then
#     echo "   BAK BEGIN" $(date)
#     rm -rf checkpoint_bakbak
#     mv checkpoint_bak checkpoint_bakbak
#     mkdir checkpoint_bak
#     cp *.csv *.h5 *dmtcp* checkpoint_bak
#     echo "   BAK END" $(date)
#   fi
# done &

# run job with checkpointing
dmtcp_launch -i $CKPT_WAIT_SEC                                                 \
  ./dishtiny -SEED ${SEED} -ANIMATION_FREQUENCY 2097152                        \
  >run.log 2>&1

# when running job fails or finishes, kill the background loop
pkill -P $$

###############################################################################
echo "Done" $(date)
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 2                         # Number hierarchical resource levels
set BASE_RESOURCE_INFLOW 0.0175000  # What amount of resource should be provided to cells at each update?

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics

set TREATMENT_DESCRIPTOR resource-even__channelsense-yes__nlev-two       # Treatment identifying slug
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 6             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0            # How much resource benefit does a successful harvest grant?
set ACTIVATION_COST 0          # How much resource is spent to attempt a harvest?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=48:00:00
#SBATCH --array=1-20
#SBATCH --mem=8G
#SBATCH --job-name ko-1040
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="seed=1040+title=stockpiletrigger+treat=resource-wave__channelsense-yes__nlev-two"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny-knockout/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/knockout/"${TREATMENT}"/"

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;
./dishtiny -SEED ${SEED} -RUN_LENGTH 270336 >run.log 2>&1

###############################################################################
echo "Done"
################################################################################
# Source Update

`2**20`

# ID Key
1. wild type
2. knockout
  * IsPoorerThan trigger (idx 3) -> 0

# Knockout Prep

```
for f in *; do cp $f id=1+$f; done
for f in c*; do mv $f id=2+$f; done
sed -i -- 's/DuplicateAdjOwnRegulator/Nop/g' id\=2+component\=program*
sed -i -- 's/AdjOwnRegulator/Nop/g' id\=2+component\=program*
sed -i -- 's/DuplicateSetOwnRegulator/Nop/g' id\=2+component\=program*
sed -i -- 's/SetOwnRegulator/Nop/g' id\=2+component\=program*
sed -i -- 's/DuplicateAdjRegulator/Nop/g' id\=2+component\=program*
sed -i -- 's/AdjRegulator/Nop/g' id\=2+component\=program*
sed -i -- 's/DuplicateSetRegulator/Nop/g' id\=2+component\=program*
sed -i -- 's/SetRegulator/Nop/g' id\=2+component\=program*
```
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 8           # How far can a signal propagate?
set EVENT_RADIUS 2             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.2         # How much resource benefit does a successful harvest grant?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=4:00:00
#SBATCH --array=1-2
#SBATCH --mem=8G
#SBATCH --job-name ko-1040-stockpiletrigger-phenotype
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

TREATMENT="seed=1040+title=stockpiletrigger+treat=resource-wave__channelsense-yes__nlev-two"
SEED=1

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny-knockout/"${TREATMENT}"/id="${SLURM_ARRAY_TASK_ID}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/knockout/"${TREATMENT}"/"

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;
./dishtiny -SEED ${SEED} -SEED_POP_ID ${SLURM_ARRAY_TASK_ID} -RUN_LENGTH 8192 >run.log 2>&1

###############################################################################
echo "Done"
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 2                         # Number hierarchical resource levels

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics
set SEED_POP 1

set TREATMENT_DESCRIPTOR resource-wave__channelsense-yes__nlev-two       # Treatment identifying slug
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 6             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.2         # How much resource benefit does a successful harvest grant?
Fn-11001111010101111100110100100101:
  Add[00110001100000111010111000010000](7,3,0)
  Pull[10000010101110010110011111110110](0,3,4)
  DuplicateClose[01100011111011101110010011101110](7,3,0)
  TestLess[01000100101010000001101111011110](0,6,2)
  SendMsgExternal[11110101110001001101001100101111](4,3,7)
  AdjOwnRegulator[00001111100110110100100100011010](4,7,1)
  DuplicateNot[10010010111010010100011011110010](0,3,4)
  DuplicateClose[00100010111011110111010011101111](6,7,0)
  TestLess[01001110101010011011011101111110](0,6,2)
  SendMsgExternal[11100011011000010101001100010111](5,7,7)
  SetGiveSharingFalse[01011001011001010111110100111000](0,1,3)
  AdjOwnRegulator[10001101100111100011000110111010](4,4,1)
  Mod[00111101101010110011010110110001](0,2,1)
  DuplicateSetOwnRegulator[00111110111100100011111000001101](1,4,2)
  SendMsgExternal[11110001110001101101001000111111](4,3,7)
  AdjOwnRegulator[10101011100111110000100100011010](4,7,1)
  DuplicateNot[00001000111110010110011111110010](0,3,4)
  DuplicateClose[00100011111010110111000011101111](6,7,0)
  TestLess[01001100101010011001011101111110](0,6,2)
  SendMsgExternal[11100101001000011101101101110111](6,7,7)
  SetGiveSharingFalse[01011001011001010111010100001000](0,1,3)
  AdjOwnRegulator[10001111100110000000000110011010](4,4,1)
  Mod[00011101001010110011010110110101](1,2,1)
  DuplicateSetOwnRegulator[00001110111100100010111000001111](1,4,2)
  QueryChannel-Lev0[11001001111110110111001001011001](1,6,2)

Fn-00010111111001011010001010001001:
  Pull[11011010001111011110101100100001](3,0,7)
  Inc[11010100000111000111010001000110](2,0,1)

Fn-01110010100110101101000111001001:
  SenseMembraneRegulator[10101110011110000001001010010101](2,1,0)
  TryReproduce-Lev0[01001100011010000001100101111101](1,1,2)
  Terminal1073741824[00010100000101010001000011101111](3,1,0)
  DuplicateDec[10001001101101000011010101000010](4,8,3)
  TryReproduce-Lev0[01011100111011010011110000011101](1,1,2)
  Terminal0.125[10111010000100110000101010000001](2,2,4)
  SendMsgInternal[10011010110010100111001100110110](1,2,5)
  DuplicateIf[00001101001001010010101011011111](2,3,2)
    DuplicateTestNEqu[11101000001111100110111111100000](0,1,1)
    DuplicateClose[11001110111101000101000110101101](0,1,6)
  Terminal1[01110111010010010100000110100011](3,5,2)
  DuplicateAdd[10001000000010101010101100110010](1,2,5)
  Nop[11101110011110000011001011010101](2,1,0)
  TryReproduce-Lev0[00001100111111100001100100111111](1,1,2)
  SendMsgInternal[10011000000010111111100101001110](1,0,5)
  QueryIsCellChild[01011100110000101111101110110001](6,3,3)
  DuplicateTerminal1073741824[00011100000110010001000011101111](3,1,0)
  DuplicateDec[00011001100111010001010000010101](4,8,3)
  TryReproduce-Lev0[01001100111010010001110101011001](1,1,2)
  Terminal0.125[11011010000010111001101010000001](2,2,4)
  SendMsgInternal[10011000110010100111001100111110](1,2,5)
  SenseOwnRegulator[11001100001000001010001110011100](2,2,2)
  DuplicateIf[01001101101001010110101011011111](2,3,2)
    DuplicateTestNEqu[10101000001110100110011110100000](0,1,1)
    SendMsgExternal[11000110100101000101001110101100](0,1,6)
    Terminal1[01010111011110010100000110100011](3,5,2)
    DuplicateAdd[10011000000010101011101100111011](1,2,5)
    Terminal1073741824[00100001000011100011110010101000](0,5,8)
    Terminal1073741824[00110000000110011011011000111111](3,1,0)
    TryReproduce-Lev0[01001100110011001011110101111111](1,1,3)
    DuplicateInput[10101110111000001100101101010010](5,8,7)
    Terminal0.125[00100010010010111001101010011000](2,2,4)
    SendMsgInternal[00010000100011111111101100111010](1,2,5)
    TryReproduce-Lev1[11101101110001010100101111001011](2,3,2)
    Terminal0.125[10000110111100111111111111011000](8,1,4)
    DuplicateTestNEqu[10100001001110100110010111100000](0,3,1)
    Terminal1[00111111110010010100001101001000](3,5,2)
    CopyMem[00010110101001011000000111000100](5,3,3)

Fn-00011011001010010111010001011110:
  SendMsgExternal[10100001010110111011100100000110](4,4,7)
  AdjRegulator[01011100000001111101110101100001](3,4,4)
  DuplicateDec[01000010010011111100010100110000](5,4,3)
  SetMembraneRegulator[11111101000001111000110111010001](2,3,3)
  PauseRepr[11111110001000001100101000111000](0,1,0)
  SetOwnRegulator[11010100101111111001000111011111](1,4,0)
  QueryIsExpired0[00110101011111111110111101100100](2,4,7)
  DuplicateExtRegulator[11110011110101011011011001011011](4,7,1)
  SetMembraneRegulator[10110101000001011111110100110001](2,2,3)
  SendMsgExternal[10110101011111111000110111100101](2,1,7)
  QueryChannelGen-Lev0[11010000000000000111100101000000](6,5,1)
  SendSmallFracResource[01011101000100101100000101100101](1,4,4)
  QueryIsPropaguleChild[11011110010100001101000010001000](8,1,6)
  Commit[11000001100111011101000011001111](0,3,3)
  PauseRepr[10011100000011000011101111011000](0,0,1)
  PauseRepr-Lev0[00010100000011111101010010011111](2,4,0)
  AdjMembraneRegulator[10001010000111101101100110110101](2,7,4)
  SendMsgExternal[00110111010011110011110111100100](2,1,7)
  QueryChannelGen-Lev0[11000001010001001111100101010000](6,2,1)
  SendSmallFracResource[01001100110010101101010101110101](6,4,4)
  QueryIsPropaguleChild[11011010010100001101001000001000](8,1,2)
  Commit[11101001100100010101100111011111](0,3,3)
  Output[10100000001001001110110010001010](6,8,0)
  PauseRepr[10011110000111001011101111010100](0,0,1)
  PauseRepr-Lev0[00011001111111101001010000011111](2,4,0)
  ActivateInbox[00111010011010001000001000101001](4,3,3)
  AdjMembraneRegulator[11001011101100100101110110110100](2,7,4)
  SetHeir[00010011110111000000011000010000](0,0,2)
  DuplicateCopyMem[00100011100101010001110111010111](1,4,5)
  Sub[11011011001011001110000001110001](2,0,1)
  ClearStockpileReserve[10110011100011110111110111001001](2,4,5)

Fn-10101010001110110000101000111001:
  CopyMem[00100000001001101010000101100100](0,0,2)
  ExtRegulator[01001110001101110010010101101101](0,5,4)
  DuplicateExtRegulator[01000111000010000100001000110101](4,0,1)
  DuplicateClose[10001010101100100000010001101011](3,0,7)
  TryReproduce-Lev2[11101110111010001110010110000001](3,3,3)
  Output[01100000111000100111101101100011](1,4,1)
  BcstMsgExternal[10110110101001111000001011000010](2,1,4)
  Return[11001101100000101001000011000011](3,1,1)
  SendMsgExternal[11011001100101011111001001001010](0,4,8)
  Countdown[10101111000010001101111011000110](5,0,3)
    PauseRepr[00111101010001010010101110011000](0,1,1)
    Break[00000000100100010010000111000100](4,4,2)
    DuplicateCopyMem[11000110011110010101100011001001](0,2,4)
    Nop[00101111010001111110010100010010](4,2,0)
    SetRegulator[10011111001000111111010110010100](8,1,8)
    SetReproductionReserve[01100010011011001110100101000110](1,1,3)
    DuplicateIf[01100010111110010010100011111110](1,1,4)

Fn-11011000110000101011000010001010:
  DuplicateTestLess[11110011110000100110000010001001](1,1,2)
  SetHeir[00011000100011111001110010000100](5,2,4)
  SetMembraneRegulator[10111100111001000100001101110010](0,3,0)
  AdjOwnRegulator[11111100100100101011111011111111](3,4,0)
  DuplicateSub[00010011110001101100111110100111](1,1,3)

Fn-11100010101001001100010001011110:
  TestEqu[10010101010100101101100000100011](6,8,3)
  DuplicateCopyMem[00100000100111010100011010000101](3,3,2)
  QueryOwnStockpile[10101001011101100111010111011111](0,1,4)
  Nop[11001100000110110111001000111011](4,7,4)
  QueryStockpile[11100001011000000111000011001111](0,2,1)
  DuplicateCopyMem[11001110000110011000110111011001](0,1,0)
  SenseOwnRegulator[01101100010000000101101110010010](4,3,2)

Fn-11010010110011100010000010111010:
  SendMsgInternal[00001111110010101111010110001010](0,0,1)
  SetHeir[00001100000111111000110000001010](5,2,0)
  DuplicateTerminal1[01110101011001001110110101011000](0,3,0)
  Div[00000011110001101101100110100110](4,1,3)
  SendMsgInternal[00001111110010101111010110001010](0,0,1)
  SetHeir[00001100000111111000110000001010](5,2,0)
  DuplicateTerminal1[01110101011001001110110111011000](0,3,0)
  Div[00000011110001101101100110100110](4,1,3)
  TryReproduce-Lev2[01101110111110110111010101000101](4,2,6)
  Dec[10111000110011110101110111000110](2,4,0)

Fn-10101010101110110000101100110001:
  DuplicateInput[10110010111110111100111010010010](8,1,8)
  CopyMem[00101000101111111011000101000110](0,0,1)
  ExtRegulator[01001110001111111010010101101101](0,5,4)
  DuplicateExtRegulator[01000011001011000110010000010101](4,0,1)
  DuplicateClose[10001010101100101100000011111010](3,0,7)
  Nop[00010100010111100110000111111111](4,4,0)
  TryReproduce-Lev2[11011110011100111111010110010100](3,3,3)
  Terminal1073741824[00110110101001111000011101101010](2,3,4)
  Return[11101111100000011001000000100011](3,1,6)
  Countdown[10101110010011001000110011000010](5,0,3)
    Break[00100111101010010010000110000101](1,4,2)
    DuplicateCopyMem[01001100001110010011100001001001](0,2,4)
    DuplicateSub[00101101101000011101001111000010](6,1,2)
    Countdown[00101111111001001110010100011100](0,2,0)
      SetRegulator[10011111001000110111110100010100](8,1,8)
      Terminal1073741824[11110110101001111000011001100010](2,0,4)
      Return[11111111110100001001000000100111](3,1,6)
      Countdown[00001100010011001011110011000110](5,0,3)
        PauseRepr[01111101010101010100101100011000](0,1,1)
        Break[00110011101000100010011110001101](1,4,2)
        DuplicateCopyMem[01000100001110010010101001001001](0,2,4)
        SetRegulator[10011111000000110111111110010001](8,1,8)
        SetReproductionReserve[01001000011001001110100101000110](1,1,3)
        SendMsgInternal[01100010111010010010100011111111](1,1,4)

Fn-00010110011001011010000001001101:
  Pull[11011010001011011110101100100001](3,0,7)
  Inc[11010101000111000111010001011111](2,0,1)

{"value0":[{"value0":{"value0":3199283055}},{"value0":{"value0":940782386}},{"value0":{"value0":2110105037}},{"value0":{"value0":3362482416}},{"value0":{"value0":3848100983}},{"value0":{"value0":3340579848}},{"value0":{"value0":4119037971}},{"value0":{"value0":497522472}},{"value0":{"value0":2413335125}},{"value0":{"value0":3008669915}},{"value0":{"value0":3889329565}},{"value0":{"value0":4294461310}},{"value0":{"value0":2056245273}},{"value0":{"value0":897293788}},{"value0":{"value0":2877130363}},{"value0":{"value0":1874447047}},{"value0":{"value0":3475649443}},{"value0":{"value0":739681723}},{"value0":{"value0":468116182}},{"value0":{"value0":2918466101}},{"value0":{"value0":3713708679}},{"value0":{"value0":3478331929}},{"value0":{"value0":2286731816}},{"value0":{"value0":2162150008}},{"value0":{"value0":3015266169}},{"value0":{"value0":3377626905}}]}{"value0":{"values":[{"key":9,"value":9},{"key":8,"value":8},{"key":7,"value":7},{"key":6,"value":6},{"key":5,"value":5},{"key":4,"value":4},{"key":3,"value":5},{"key":2,"value":6},{"key":1,"value":1},{"key":0,"value":2}],"regulators":[{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":9,"value":{"value0":{"value0":375758925}}},{"key":8,"value":{"value0":{"value0":2864384817}}},{"key":7,"value":{"value0":{"value0":3536724154}}},{"key":6,"value":{"value0":{"value0":3802448990}}},{"key":5,"value":{"value0":{"value0":3636637834}}},{"key":4,"value":{"value0":{"value0":2855995961}}},{"key":3,"value":{"value0":{"value0":455701598}}},{"key":2,"value":{"value0":{"value0":1922748873}}},{"key":1,"value":{"value0":{"value0":400925321}}},{"key":0,"value":{"value0":{"value0":3478637861}}}],"uids":[0,1,2,3,4,5,6,7,8,9]}}{"value0":{"values":[{"key":9,"value":9},{"key":8,"value":8},{"key":7,"value":7},{"key":6,"value":6},{"key":5,"value":5},{"key":4,"value":4},{"key":3,"value":5},{"key":2,"value":6},{"key":1,"value":1},{"key":0,"value":2}],"regulators":[{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":9,"value":{"value0":{"value0":375758925}}},{"key":8,"value":{"value0":{"value0":2864384817}}},{"key":7,"value":{"value0":{"value0":3536724154}}},{"key":6,"value":{"value0":{"value0":3802448990}}},{"key":5,"value":{"value0":{"value0":3636637834}}},{"key":4,"value":{"value0":{"value0":2855995961}}},{"key":3,"value":{"value0":{"value0":455701598}}},{"key":2,"value":{"value0":{"value0":1922748873}}},{"key":1,"value":{"value0":{"value0":400925321}}},{"key":0,"value":{"value0":{"value0":3478637861}}}],"uids":[0,1,2,3,4,5,6,7,8,9]}}{"value0":{"values":[{"key":9,"value":9},{"key":8,"value":8},{"key":7,"value":7},{"key":6,"value":7},{"key":5,"value":5},{"key":4,"value":4},{"key":3,"value":2},{"key":2,"value":5},{"key":1,"value":1},{"key":0,"value":2}],"regulators":[{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":9,"value":{"value0":{"value0":375758925}}},{"key":8,"value":{"value0":{"value0":2864384817}}},{"key":7,"value":{"value0":{"value0":3536724154}}},{"key":6,"value":{"value0":{"value0":3802448990}}},{"key":5,"value":{"value0":{"value0":3636637834}}},{"key":4,"value":{"value0":{"value0":2855995961}}},{"key":3,"value":{"value0":{"value0":455701598}}},{"key":2,"value":{"value0":{"value0":1922748873}}},{"key":1,"value":{"value0":{"value0":400925321}}},{"key":0,"value":{"value0":{"value0":3478637861}}}],"uids":[0,1,2,3,4,5,6,7,8,9]}}{"value0":{"values":[{"key":9,"value":9},{"key":8,"value":8},{"key":7,"value":7},{"key":6,"value":7},{"key":5,"value":5},{"key":4,"value":4},{"key":3,"value":2},{"key":2,"value":5},{"key":1,"value":1},{"key":0,"value":2}],"regulators":[{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":9,"value":{"value0":{"value0":375758925}}},{"key":8,"value":{"value0":{"value0":2864384817}}},{"key":7,"value":{"value0":{"value0":3536724154}}},{"key":6,"value":{"value0":{"value0":3802448990}}},{"key":5,"value":{"value0":{"value0":3636637834}}},{"key":4,"value":{"value0":{"value0":2855995961}}},{"key":3,"value":{"value0":{"value0":455701598}}},{"key":2,"value":{"value0":{"value0":1922748873}}},{"key":1,"value":{"value0":{"value0":400925321}}},{"key":0,"value":{"value0":{"value0":3478637861}}}],"uids":[0,1,2,3,4,5,6,7,8,9]}}### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 8           # How far can a signal propagate?
set EVENT_RADIUS 2             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.2         # How much resource benefit does a successful harvest grant?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=167:00:00         # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-40
#SBATCH --mem=8G                # memory required per node - amount of memory (in bytes)
#SBATCH --job-name treat=resource-wave__channelsense-yes__nlev-two     # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="treat=resource-wave__channelsense-yes__nlev-two"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/request/"${TREATMENT}

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Setup DMTCP"
# https://wiki.hpcc.msu.edu/display/ITH/Checkpoint+with+DMTCP
################################################################################

# set a limited stack size so DMTCP could work
ulimit -s 8192

# save coordinators host info in an environment variable
export DMTCP_COORD_HOST=$(hostname)

# ask for a uniqe port at runtime
export DMTCP_COORD_PORT=0

# checkpoint every eight hours
CKPT_WAIT_SEC=$(( 8 * 60 * 60 ))

# back up checkpoints every hour
BAK_WAIT_SEC=$(( 1 * 60 * 60 ))

echo "   DMTCP_COORD_HOST" $DMTCP_COORD_HOST
echo "   DMTCP_COORD_PORT" $DMTCP_COORD_PORT
echo "   CKPT_WAIT_SEC" $CKPT_WAIT_SEC
echo "   BAK_WAIT_SEC" $BAK_WAIT_SEC

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;

# set up background loop
# so we always have at least one previous checkpoint and file state
# mkdir checkpoint_bak
# touch checkpoint_bak/init.dmtcp
# while true; do
#   echo "   BAK SLEEP" $(date)
#   sleep $BAK_WAIT_SEC
#   echo "   BAK WAKE" $(date)
#   # if we have a new checkpoint, shuffle the backups
#   if ! diff *.dmtcp checkpoint_bak/*.dmtcp; then
#     echo "   BAK BEGIN" $(date)
#     rm -rf checkpoint_bakbak
#     mv checkpoint_bak checkpoint_bakbak
#     mkdir checkpoint_bak
#     cp *.csv *.h5 *dmtcp* checkpoint_bak
#     echo "   BAK END" $(date)
#   fi
# done &

# run job with checkpointing
dmtcp_launch -i $CKPT_WAIT_SEC                                                 \
  ./dishtiny -SEED ${SEED} -ANIMATION_FREQUENCY 2097152                        \
  >run.log 2>&1

# when running job fails or finishes, kill the background loop
pkill -P $$

###############################################################################
echo "Done" $(date)
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 2                         # Number hierarchical resource levels

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics

set TREATMENT_DESCRIPTOR resource-wave__channelsense-yes__nlev-two       # Treatment identifying slug
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 6             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.2         # How much resource benefit does a successful harvest grant?
{"value0":{"values":[{"key":11,"value":0},{"key":10,"value":0},{"key":9,"value":0},{"key":8,"value":0},{"key":7,"value":8},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":11,"value":{"value0":{"value0":1373226110}}},{"key":10,"value":{"value0":{"value0":894240270}}},{"key":9,"value":{"value0":{"value0":1373226110}}},{"key":8,"value":{"value0":{"value0":1631761025}}},{"key":7,"value":{"value0":{"value0":1909164158}}},{"key":6,"value":{"value0":{"value0":289750466}}},{"key":5,"value":{"value0":{"value0":1283400562}}},{"key":4,"value":{"value0":{"value0":1908494462}}},{"key":3,"value":{"value0":{"value0":1594188900}}},{"key":2,"value":{"value0":{"value0":1372180830}}},{"key":1,"value":{"value0":{"value0":240797957}}},{"key":0,"value":{"value0":{"value0":827162636}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11]}}{"value0":[{"value0":{"value0":1487835186}},{"value0":{"value0":1179352753}},{"value0":{"value0":1216575126}},{"value0":{"value0":1208976442}},{"value0":{"value0":3156515659}},{"value0":{"value0":639414838}},{"value0":{"value0":948226753}},{"value0":{"value0":957164413}},{"value0":{"value0":836786286}},{"value0":{"value0":4150779265}},{"value0":{"value0":2543910275}},{"value0":{"value0":2585637802}},{"value0":{"value0":994050193}},{"value0":{"value0":1516670312}},{"value0":{"value0":1716078789}},{"value0":{"value0":1922282293}},{"value0":{"value0":4026818928}},{"value0":{"value0":2210874306}},{"value0":{"value0":3799762180}},{"value0":{"value0":386411205}},{"value0":{"value0":89105332}},{"value0":{"value0":3793464074}},{"value0":{"value0":2681087167}},{"value0":{"value0":2598114682}},{"value0":{"value0":3997369150}},{"value0":{"value0":2995261484}}]}{"value0":{"values":[{"key":11,"value":0},{"key":10,"value":0},{"key":9,"value":0},{"key":8,"value":0},{"key":7,"value":8},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":11,"value":{"value0":{"value0":1373226110}}},{"key":10,"value":{"value0":{"value0":894240270}}},{"key":9,"value":{"value0":{"value0":1373226110}}},{"key":8,"value":{"value0":{"value0":1631761025}}},{"key":7,"value":{"value0":{"value0":1909164158}}},{"key":6,"value":{"value0":{"value0":289750466}}},{"key":5,"value":{"value0":{"value0":1283400562}}},{"key":4,"value":{"value0":{"value0":1908494462}}},{"key":3,"value":{"value0":{"value0":1594188900}}},{"key":2,"value":{"value0":{"value0":1372180830}}},{"key":1,"value":{"value0":{"value0":240797957}}},{"key":0,"value":{"value0":{"value0":827162636}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11]}}{"value0":{"values":[{"key":11,"value":0},{"key":10,"value":0},{"key":9,"value":0},{"key":8,"value":0},{"key":7,"value":8},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":11,"value":{"value0":{"value0":1373226110}}},{"key":10,"value":{"value0":{"value0":894240270}}},{"key":9,"value":{"value0":{"value0":1373226110}}},{"key":8,"value":{"value0":{"value0":1631761025}}},{"key":7,"value":{"value0":{"value0":1909164158}}},{"key":6,"value":{"value0":{"value0":289750466}}},{"key":5,"value":{"value0":{"value0":1283400562}}},{"key":4,"value":{"value0":{"value0":1908494462}}},{"key":3,"value":{"value0":{"value0":1594188900}}},{"key":2,"value":{"value0":{"value0":1372180830}}},{"key":1,"value":{"value0":{"value0":240797957}}},{"key":0,"value":{"value0":{"value0":827162636}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11]}}{"value0":{"values":[{"key":11,"value":0},{"key":10,"value":0},{"key":9,"value":0},{"key":8,"value":0},{"key":7,"value":8},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":11,"value":{"value0":{"value0":1373226110}}},{"key":10,"value":{"value0":{"value0":894240270}}},{"key":9,"value":{"value0":{"value0":1373226110}}},{"key":8,"value":{"value0":{"value0":1631761025}}},{"key":7,"value":{"value0":{"value0":1909164158}}},{"key":6,"value":{"value0":{"value0":289750466}}},{"key":5,"value":{"value0":{"value0":1283400562}}},{"key":4,"value":{"value0":{"value0":1908494462}}},{"key":3,"value":{"value0":{"value0":1594188900}}},{"key":2,"value":{"value0":{"value0":1372180830}}},{"key":1,"value":{"value0":{"value0":240797957}}},{"key":0,"value":{"value0":{"value0":827162636}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11]}}#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=48:00:00
#SBATCH --array=1-20
#SBATCH --mem=8G
#SBATCH --job-name ko-1005-intermessaging_sharing
#SBATCH --account=devolab
#SBATCH --output="slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="seed=1005+title=intermessaging_sharing+treat=resource-wave__channelsense-yes__nlev-onebig"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny-knockout/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/knockout/"${TREATMENT}"/"

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;
./dishtiny -SEED ${SEED} -RUN_LENGTH 270336 >run.log 2>&1

###############################################################################
echo "Done"
################################################################################
# Source Update

`2**20`

# ID Key

1. knockout
  * `BcstMsgExternal`
  * `SendMsgExternal`
2. knockout
  * `BcstMsgExternal`
  * `SendMsgExternal`
  * `SendBigFracResource`
  * `SendSmallFracResource`

# Knockout Prep

```
for f in *; do cp $f id=1+$f; done
for f in c*; do mv $f id=2+$f; done
sed -i -- 's/BcstMsgExternal/Nop/g' id\=1+component\=program*
sed -i -- 's/SendMsgExternal/Nop/g' id\=1+component\=program*
sed -i -- 's/BcstMsgExternal/Nop/g' id\=2+component\=program*
sed -i -- 's/SendMsgExternal/Nop/g' id\=2+component\=program*
sed -i -- 's/SendBigFracResource/Nop/g' id\=2+component\=program*
sed -i -- 's/SendSmallFracResource/Nop/g' id\=2+component\=program*
```
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 6             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.6          # How much resource benefit does a successful harvest grant?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=4:00:00
#SBATCH --array=1-2
#SBATCH --mem=8G
#SBATCH --job-name ko-1005-intermessaging_sharing-phenotype
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

TREATMENT="seed=1005+title=intermessaging_sharing+treat=resource-wave__channelsense-yes__nlev-onebig"
SEED=1

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny-knockout/"${TREATMENT}"/id="${SLURM_ARRAY_TASK_ID}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/knockout/"${TREATMENT}

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;
./dishtiny -SEED ${SEED} -SEED_POP_ID ${SLURM_ARRAY_TASK_ID} -RUN_LENGTH 8192 >run.log 2>&1

###############################################################################
echo "Done"
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 1                         # Number hierarchical resource levels

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics
set SEED_POP 1

set TREATMENT_DESCRIPTOR resource-wave__channelsense-yes__nlev-onebig       # Treatment identifying slug
Fn-10111011111000011010110001011001:
  AdjMembraneRegulator[11010111100001001111000010111110](1,2,2)
  AdjMembraneRegulator[11011111110011000011100000111110](1,2,4)

Fn-01011001101101011010001101011010:
  Rng[10101011011000001001011010101100](1,0,2)
  DuplicateCountdown[11001100111000110100100101000101](2,3,8)
    DuplicateAdd[10111110001001110101111101010110](4,4,4)
    Input[01011001101010111111111110111101](0,4,4)
    QueryIsCellParent[00111011110101111100000101110011](2,4,4)
    TryReproduce-Lev0[10101010000011001000001110110111](4,3,3)
    ClearReproductionReserve[01010010001011101000001101110011](3,4,1)
    DuplicateAdd[10110001010100010011010111010000](3,2,1)
    AdjMembraneRegulator[00101001000001100011001000101111](3,3,7)

Fn-01011001101101011010001111011010:
  Rng[10111011101000000001011110100100](1,0,2)
  DuplicateRng[01101011110010100111110110111000](1,4,2)
  DuplicateAdd[10111110101001010001110101011100](4,4,3)
  DuplicateExtRegulator[11100010000111001101001000010101](6,2,6)
  DuplicateAdd[10110110101000110001101111101110](4,4,3)
  SetGiveSharingTrue[01001111110010100111110110111000](4,4,2)
  DuplicateAdd[10100110001001010001111111011100](4,4,3)
  Input[01011001101010111111111000110001](0,6,4)
  QueryIsCellParent[10011101111101111101000000100001](2,4,4)
  TryReproduce-Lev0[11101100011011001010001110010110](4,2,3)
  ClearReproductionReserve[11000010101001001000001000110111](3,4,1)
  Mult[11000111110100001011110100010111](4,2,1)
  DuplicateSenseRegulator[00111101011100000011110111011000](3,2,1)
  SetMem[01001111100010110111110110111000](4,4,2)
  DuplicateAdd[00100110001001010001111100011110](4,4,3)
  Input[01011001101000111111100000110001](0,6,4)
  QueryIsCellParent[10011101111101111001000101110011](2,4,4)
  TryReproduce-Lev0[11101100011011001110001110010110](4,3,3)
  ClearReproductionReserve[11010010101001101000001000100111](3,4,1)
  Mult[11100011100100001010110100010111](4,2,1)
  DuplicateSenseRegulator[00110101011100001011010111111000](3,2,1)

Fn-01010011000101111100010100000101:
  PauseRepr[00101101011010111101111101000001](8,6,6)
  DuplicateMod[10000110010010100010011101011111](3,4,4)
  SetHeir[10000011100100011101001111011000](1,3,1)
  DuplicateTerminal0.125[00010011110100000001001000111101](1,4,0)
  Nop[01001111110001100011010001110001](4,3,0)
  SetGiveSharingTrue[00110010010101110011100101111011](2,6,2)
  QueryIsPropaguleChild[10011111111011010101101101000011](5,0,7)
  AdjRegulator[10101010111100001101001111010100](3,3,3)
  QueryStockpile[11111101110100111100111100101110](5,0,7)
  DuplicateAdd[00000010001100101101111011011100](7,4,1)
  SetGiveSharingTrue[11010011100110001000111101100111](1,7,0)
  SetAcceptSharingFalse[10010110010110101110101100010101](2,3,3)
  DuplicatePull[11110000110111001011001100111110](0,4,0)
  SendBigFracResource[10010010110000010000001111111010](7,6,0)
  DuplicateReturn[00000001111101010011010100101000](1,4,0)
  AdjRegulator[10001000011100000001001001011100](3,3,3)
  SetGiveSharingTrue[10010011100110001010111001100011](1,7,0)
  DuplicateTerminal8[00100001110101001001011110111110](2,2,1)
  DuplicatePull[00000100110111010011001111001111](6,4,4)
  SendBigFracResource[10000010101000111000001101111010](1,3,0)
  DuplicateReturn[00001000010100100011001100100000](1,4,0)
  AdjRegulator[11001111111110110111010111011110](3,2,3)
  DuplicateIf[10010110011110111101010011100111](6,8,1)
    Mult[11000001011110100111001111000101](1,0,0)
    PutMembraneBlocker[11110001101101001101001111001110](2,2,1)
    SetAcceptSharingFalse[10011010000000101010110000010100](2,1,4)

Fn-10111101100100111011100000010010:
  Terminal8[00110010011111111010001111001110](1,3,1)

Fn-10000010110100101111100010001000:
  Nop[01110110011000001111010000001111](1,3,2)
  TestLess[00110001111111100011100111111110](2,4,1)
  QueryIsExpired0[10101010110101010111101101000011](4,0,3)
  DuplicateCopyMem[10100001001111100010001101001100](2,1,2)
  Nop[01110011110101000100110010010111](4,4,3)
  PutMembraneBlocker[01010001100101101001010101011001](3,2,1)

Fn-01011001101001011010000111011011:
  Rng[10100011001000001001011010101100](1,0,2)
  DuplicateCountdown[11001010111000111100100101001101](2,2,8)
    DuplicateAdd[11110001010100010011010111010000](3,2,1)
    QueryIsLive[01010110100110011000011100001000](0,0,8)
    AdjMembraneRegulator[00101001000001100011001000100001](3,3,7)

{"value0":[{"value0":{"value0":656516950}},{"value0":{"value0":1444915667}},{"value0":{"value0":4198016232}},{"value0":{"value0":80512863}},{"value0":{"value0":2860379015}},{"value0":{"value0":2262625723}},{"value0":{"value0":1266642406}},{"value0":{"value0":660404870}},{"value0":{"value0":3728056760}},{"value0":{"value0":2496305245}},{"value0":{"value0":3929353779}},{"value0":{"value0":3866785480}},{"value0":{"value0":3468028888}},{"value0":{"value0":1559638579}},{"value0":{"value0":3524845464}},{"value0":{"value0":840841829}},{"value0":{"value0":4084038252}},{"value0":{"value0":2646990789}},{"value0":{"value0":3544603814}},{"value0":{"value0":3773862467}}]}{"value0":{"values":[{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":6,"value":{"value0":{"value0":1504027099}}},{"key":5,"value":{"value0":{"value0":2194864264}}},{"key":4,"value":{"value0":{"value0":3180574738}}},{"key":3,"value":{"value0":{"value0":1394066693}}},{"key":2,"value":{"value0":{"value0":1505076186}}},{"key":1,"value":{"value0":{"value0":1505076058}}},{"key":0,"value":{"value0":{"value0":3152129113}}}],"uids":[0,1,2,3,4,5,6]}}{"value0":{"values":[{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":0},{"key":0,"value":2}],"regulators":[{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":6,"value":{"value0":{"value0":1504027099}}},{"key":5,"value":{"value0":{"value0":2194864264}}},{"key":4,"value":{"value0":{"value0":3180574738}}},{"key":3,"value":{"value0":{"value0":1394066693}}},{"key":2,"value":{"value0":{"value0":1505076186}}},{"key":1,"value":{"value0":{"value0":1505076058}}},{"key":0,"value":{"value0":{"value0":3152129113}}}],"uids":[0,1,2,3,4,5,6]}}{"value0":{"values":[{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":6,"value":{"value0":{"value0":1504027099}}},{"key":5,"value":{"value0":{"value0":2194864264}}},{"key":4,"value":{"value0":{"value0":3180574738}}},{"key":3,"value":{"value0":{"value0":1394066693}}},{"key":2,"value":{"value0":{"value0":1505076186}}},{"key":1,"value":{"value0":{"value0":1505076058}}},{"key":0,"value":{"value0":{"value0":3152129113}}}],"uids":[0,1,2,3,4,5,6]}}{"value0":{"values":[{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":6,"value":{"value0":{"value0":1504027099}}},{"key":5,"value":{"value0":{"value0":2194864264}}},{"key":4,"value":{"value0":{"value0":3180574738}}},{"key":3,"value":{"value0":{"value0":1394066693}}},{"key":2,"value":{"value0":{"value0":1505076186}}},{"key":1,"value":{"value0":{"value0":1505076058}}},{"key":0,"value":{"value0":{"value0":3152129113}}}],"uids":[0,1,2,3,4,5,6]}}### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 6             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.0          # How much resource benefit does a successful harvest grant?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=167:00:00         # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-40
#SBATCH --mem=8G                # memory required per node - amount of memory (in bytes)
#SBATCH --job-name treat=resource-even__channelsense-yes__nlev-onebig     # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="treat=resource-even__channelsense-yes__nlev-onebig"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/request/"${TREATMENT}

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Setup DMTCP"
# https://wiki.hpcc.msu.edu/display/ITH/Checkpoint+with+DMTCP
################################################################################

# set a limited stack size so DMTCP could work
ulimit -s 8192

# save coordinators host info in an environment variable
export DMTCP_COORD_HOST=$(hostname)

# ask for a uniqe port at runtime
export DMTCP_COORD_PORT=0

# checkpoint every eight hours
CKPT_WAIT_SEC=$(( 8 * 60 * 60 ))

# back up checkpoints every hour
BAK_WAIT_SEC=$(( 1 * 60 * 60 ))

echo "   DMTCP_COORD_HOST" $DMTCP_COORD_HOST
echo "   DMTCP_COORD_PORT" $DMTCP_COORD_PORT
echo "   CKPT_WAIT_SEC" $CKPT_WAIT_SEC
echo "   BAK_WAIT_SEC" $BAK_WAIT_SEC

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;

# set up background loop
# so we always have at least one previous checkpoint and file state
# mkdir checkpoint_bak
# touch checkpoint_bak/init.dmtcp
# while true; do
#   echo "   BAK SLEEP" $(date)
#   sleep $BAK_WAIT_SEC
#   echo "   BAK WAKE" $(date)
#   # if we have a new checkpoint, shuffle the backups
#   if ! diff *.dmtcp checkpoint_bak/*.dmtcp; then
#     echo "   BAK BEGIN" $(date)
#     rm -rf checkpoint_bakbak
#     mv checkpoint_bak checkpoint_bakbak
#     mkdir checkpoint_bak
#     cp *.csv *.h5 *dmtcp* checkpoint_bak
#     echo "   BAK END" $(date)
#   fi
# done &

# run job with checkpointing
dmtcp_launch -i $CKPT_WAIT_SEC                                                 \
  ./dishtiny -SEED ${SEED} -ANIMATION_FREQUENCY 2097152                        \
  >run.log 2>&1

# when running job fails or finishes, kill the background loop
pkill -P $$

###############################################################################
echo "Done" $(date)
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 1                         # Number hierarchical resource levels
set BASE_RESOURCE_INFLOW 0.0175000  # What amount of resource should be provided to cells at each update?

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics

set TREATMENT_DESCRIPTOR resource-even__channelsense-yes__nlev-onebig       # Treatment identifying slug
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 8           # How far can a signal propagate?
set EVENT_RADIUS 2             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0            # How much resource benefit does a successful harvest grant?
set ACTIVATION_COST 0          # How much resource is spent to attempt a harvest?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=167:00:00         # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-40
#SBATCH --mem=8G                # memory required per node - amount of memory (in bytes)
#SBATCH --job-name treat=resource-even__channelsense-no__nlev-two__mute__mixed     # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="treat=resource-even__channelsense-no__nlev-two__mute__mixed"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/request/"${TREATMENT}

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;
./dishtiny -SEED ${SEED} >run.log 2>&1

###############################################################################
echo "Done"
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 2                         # Number hierarchical resource levels
set BASE_RESOURCE_INFLOW 0.01750000  # What amount of resource should be provided to cells at each update?
set CHANNELS_VISIBLE 0             # Should channels have any effect in the instruction set and event triggers?
set LOCAL_REPRODUCTION 0

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings
set INBOX_CAPACITY 0             # Capacity of a cell's inbox.

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics

set TREATMENT_DESCRIPTOR resource-even__channelsense-no__nlev-two__mute__mixed       # Treatment identifying slug
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 8             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0            # How much resource benefit does a successful harvest grant?
set ACTIVATION_COST 0          # How much resource is spent to attempt a harvest?
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 8           # How far can a signal propagate?
set EVENT_RADIUS 2             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.2         # How much resource benefit does a successful harvest grant?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=167:00:00         # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-40
#SBATCH --mem=8G                # memory required per node - amount of memory (in bytes)
#SBATCH --job-name treat=resource-wave__channelsense-yes__nlev-two     # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="treat=resource-wave__channelsense-yes__nlev-two"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/request/"${TREATMENT}

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Setup DMTCP"
# https://wiki.hpcc.msu.edu/display/ITH/Checkpoint+with+DMTCP
################################################################################

# set a limited stack size so DMTCP could work
ulimit -s 8192

# save coordinators host info in an environment variable
export DMTCP_COORD_HOST=$(hostname)

# ask for a uniqe port at runtime
export DMTCP_COORD_PORT=0

# checkpoint every eight hours
CKPT_WAIT_SEC=$(( 8 * 60 * 60 ))

# back up checkpoints every hour
BAK_WAIT_SEC=$(( 1 * 60 * 60 ))

echo "   DMTCP_COORD_HOST" $DMTCP_COORD_HOST
echo "   DMTCP_COORD_PORT" $DMTCP_COORD_PORT
echo "   CKPT_WAIT_SEC" $CKPT_WAIT_SEC
echo "   BAK_WAIT_SEC" $BAK_WAIT_SEC

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;

# set up background loop
# so we always have at least one previous checkpoint and file state
# mkdir checkpoint_bak
# touch checkpoint_bak/init.dmtcp
# while true; do
#   echo "   BAK SLEEP" $(date)
#   sleep $BAK_WAIT_SEC
#   echo "   BAK WAKE" $(date)
#   # if we have a new checkpoint, shuffle the backups
#   if ! diff *.dmtcp checkpoint_bak/*.dmtcp; then
#     echo "   BAK BEGIN" $(date)
#     rm -rf checkpoint_bakbak
#     mv checkpoint_bak checkpoint_bakbak
#     mkdir checkpoint_bak
#     cp *.csv *.h5 *dmtcp* checkpoint_bak
#     echo "   BAK END" $(date)
#   fi
# done &

# run job with checkpointing
dmtcp_launch -i $CKPT_WAIT_SEC                                                 \
  ./dishtiny -SEED ${SEED} -ANIMATION_FREQUENCY 2097152                        \
  >run.log 2>&1

# when running job fails or finishes, kill the background loop
pkill -P $$

###############################################################################
echo "Done" $(date)
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 2                         # Number hierarchical resource levels

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics

set TREATMENT_DESCRIPTOR resource-wave__channelsense-yes__nlev-two       # Treatment identifying slug
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 6             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.2         # How much resource benefit does a successful harvest grant?
{"value0":[{"value0":{"value0":1608817340}},{"value0":{"value0":205891422}},{"value0":{"value0":353229906}},{"value0":{"value0":1289998269}},{"value0":{"value0":1612017405}},{"value0":{"value0":185983699}},{"value0":{"value0":2124403702}},{"value0":{"value0":629010042}},{"value0":{"value0":2456413876}},{"value0":{"value0":23383663}},{"value0":{"value0":2122767081}},{"value0":{"value0":124389511}},{"value0":{"value0":3787878063}},{"value0":{"value0":2662702181}},{"value0":{"value0":1399777240}},{"value0":{"value0":4137545220}},{"value0":{"value0":17869748}},{"value0":{"value0":940784205}},{"value0":{"value0":1465405948}},{"value0":{"value0":3545223171}},{"value0":{"value0":4087532928}},{"value0":{"value0":2193198996}},{"value0":{"value0":3381842335}},{"value0":{"value0":1728659325}},{"value0":{"value0":959851606}},{"value0":{"value0":2827487073}}]}{"value0":{"values":[{"key":13,"value":2},{"key":12,"value":0},{"key":11,"value":0},{"key":10,"value":0},{"key":9,"value":0},{"key":8,"value":0},{"key":7,"value":2},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":18446744073709551613},{"key":0,"value":0}],"regulators":[{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.1461072456174353},{"key":0,"value":1.0}],"tags":[{"key":13,"value":{"value0":{"value0":3443125414}}},{"key":12,"value":{"value0":{"value0":867020314}}},{"key":11,"value":{"value0":{"value0":3385942940}}},{"key":10,"value":{"value0":{"value0":501239490}}},{"key":9,"value":{"value0":{"value0":3058747417}}},{"key":8,"value":{"value0":{"value0":2256972125}}},{"key":7,"value":{"value0":{"value0":4182706755}}},{"key":6,"value":{"value0":{"value0":445221752}}},{"key":5,"value":{"value0":{"value0":1609968023}}},{"key":4,"value":{"value0":{"value0":1763104028}}},{"key":3,"value":{"value0":{"value0":457973550}}},{"key":2,"value":{"value0":{"value0":1289074461}}},{"key":1,"value":{"value0":{"value0":2463768627}}},{"key":0,"value":{"value0":{"value0":2017810524}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}}{"value0":{"values":[{"key":13,"value":2},{"key":12,"value":2},{"key":11,"value":0},{"key":10,"value":0},{"key":9,"value":0},{"key":8,"value":0},{"key":7,"value":2},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":18446744073709551613},{"key":0,"value":2}],"regulators":[{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0051541082419749},{"key":0,"value":1.0}],"tags":[{"key":13,"value":{"value0":{"value0":3443125414}}},{"key":12,"value":{"value0":{"value0":867020314}}},{"key":11,"value":{"value0":{"value0":3385942940}}},{"key":10,"value":{"value0":{"value0":501239490}}},{"key":9,"value":{"value0":{"value0":3058747417}}},{"key":8,"value":{"value0":{"value0":2256972125}}},{"key":7,"value":{"value0":{"value0":4182706755}}},{"key":6,"value":{"value0":{"value0":445221752}}},{"key":5,"value":{"value0":{"value0":1609968023}}},{"key":4,"value":{"value0":{"value0":1763104028}}},{"key":3,"value":{"value0":{"value0":457973550}}},{"key":2,"value":{"value0":{"value0":1289074461}}},{"key":1,"value":{"value0":{"value0":2463768627}}},{"key":0,"value":{"value0":{"value0":2017810524}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}}{"value0":{"values":[{"key":13,"value":0},{"key":12,"value":1},{"key":11,"value":0},{"key":10,"value":0},{"key":9,"value":0},{"key":8,"value":0},{"key":7,"value":0},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":18446744073709551613},{"key":0,"value":0}],"regulators":[{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.1604285188233324},{"key":0,"value":1.0}],"tags":[{"key":13,"value":{"value0":{"value0":3443125414}}},{"key":12,"value":{"value0":{"value0":867020314}}},{"key":11,"value":{"value0":{"value0":3385942940}}},{"key":10,"value":{"value0":{"value0":501239490}}},{"key":9,"value":{"value0":{"value0":3058747417}}},{"key":8,"value":{"value0":{"value0":2256972125}}},{"key":7,"value":{"value0":{"value0":4182706755}}},{"key":6,"value":{"value0":{"value0":445221752}}},{"key":5,"value":{"value0":{"value0":1609968023}}},{"key":4,"value":{"value0":{"value0":1763104028}}},{"key":3,"value":{"value0":{"value0":457973550}}},{"key":2,"value":{"value0":{"value0":1289074461}}},{"key":1,"value":{"value0":{"value0":2463768627}}},{"key":0,"value":{"value0":{"value0":2017810524}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}}{"value0":{"values":[{"key":13,"value":0},{"key":12,"value":1},{"key":11,"value":0},{"key":10,"value":0},{"key":9,"value":0},{"key":8,"value":0},{"key":7,"value":0},{"key":6,"value":2},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":4},{"key":1,"value":18446744073709551613},{"key":0,"value":0}],"regulators":[{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.2796278009616753},{"key":0,"value":1.0}],"tags":[{"key":13,"value":{"value0":{"value0":3443125414}}},{"key":12,"value":{"value0":{"value0":867020314}}},{"key":11,"value":{"value0":{"value0":3385942940}}},{"key":10,"value":{"value0":{"value0":501239490}}},{"key":9,"value":{"value0":{"value0":3058747417}}},{"key":8,"value":{"value0":{"value0":2256972125}}},{"key":7,"value":{"value0":{"value0":4182706755}}},{"key":6,"value":{"value0":{"value0":445221752}}},{"key":5,"value":{"value0":{"value0":1609968023}}},{"key":4,"value":{"value0":{"value0":1763104028}}},{"key":3,"value":{"value0":{"value0":457973550}}},{"key":2,"value":{"value0":{"value0":1289074461}}},{"key":1,"value":{"value0":{"value0":2463768627}}},{"key":0,"value":{"value0":{"value0":2017810524}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}}#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=48:00:00
#SBATCH --array=1-20
#SBATCH --mem=8G
#SBATCH --job-name ko-1004
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="seed=1004+title=apoptosis+treat=resource-even__channelsense-yes__nlev-two"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny-knockout/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/knockout/"${TREATMENT}"/"

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;
./dishtiny -SEED ${SEED} -RUN_LENGTH 270336 >run.log 2>&1

###############################################################################
echo "Done"
################################################################################
# Source Update

`2**20`

# ID Key

1. wild type
2. knockout
  * `DoApoptosisComplete`

# Knockout Prep

```
for f in *; do cp $f id=1+$f; done
for f in c*; do mv $f id=2+$f; done
sed -i -- 's/DoApoptosisComplete/Nop/g' id\=2+component\=program*
```
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 8           # How far can a signal propagate?
set EVENT_RADIUS 2             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0            # How much resource benefit does a successful harvest grant?
set ACTIVATION_COST 0          # How much resource is spent to attempt a harvest?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=48:00:00
#SBATCH --array=1-2
#SBATCH --mem=8G
#SBATCH --job-name ko-1004-apoptosis-phenotype
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

TREATMENT="seed=1004+title=apoptosis+treat=resource-even__channelsense-yes__nlev-two"
SEED=1

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny-knockout/"${TREATMENT}"/id="${SLURM_ARRAY_TASK_ID}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/knockout/"${TREATMENT}"/"

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;
./dishtiny -SEED ${SEED} -SEED_POP_ID ${SLURM_ARRAY_TASK_ID} -RUN_LENGTH 270336 >run.log 2>&1

###############################################################################
echo "Done"
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 2                         # Number hierarchical resource levels
set BASE_RESOURCE_INFLOW 0.0175000  # What amount of resource should be provided to cells at each update?

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics
set SEED_POP 1

set TREATMENT_DESCRIPTOR resource-even__channelsense-yes__nlev-two       # Treatment identifying slug
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 6             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0            # How much resource benefit does a successful harvest grant?
set ACTIVATION_COST 0          # How much resource is spent to attempt a harvest?
{"value0":[{"value0":{"value0":4239618164}},{"value0":{"value0":1099522381}},{"value0":{"value0":811002543}},{"value0":{"value0":259074233}},{"value0":{"value0":500537891}},{"value0":{"value0":2942549458}},{"value0":{"value0":2567618168}},{"value0":{"value0":3987922218}},{"value0":{"value0":3694514551}},{"value0":{"value0":724630233}},{"value0":{"value0":2064048693}},{"value0":{"value0":1068035120}},{"value0":{"value0":3912183703}},{"value0":{"value0":1038132906}},{"value0":{"value0":588182676}},{"value0":{"value0":3885243660}},{"value0":{"value0":3627420533}},{"value0":{"value0":1606985644}},{"value0":{"value0":2658103491}},{"value0":{"value0":371887709}},{"value0":{"value0":905435661}},{"value0":{"value0":3650760233}},{"value0":{"value0":2794983587}},{"value0":{"value0":35831691}},{"value0":{"value0":4037601273}},{"value0":{"value0":929424666}}]}{"value0":{"values":[{"key":15,"value":0},{"key":14,"value":0},{"key":13,"value":0},{"key":12,"value":0},{"key":11,"value":0},{"key":10,"value":0},{"key":9,"value":0},{"key":8,"value":2},{"key":7,"value":0},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":15,"value":1.0},{"key":14,"value":1.0},{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":15,"value":{"value0":{"value0":2824759207}}},{"key":14,"value":{"value0":{"value0":277784490}}},{"key":13,"value":{"value0":{"value0":4236448203}}},{"key":12,"value":{"value0":{"value0":2824759079}}},{"key":11,"value":{"value0":{"value0":3078092489}}},{"key":10,"value":{"value0":{"value0":1556287947}}},{"key":9,"value":{"value0":{"value0":492316980}}},{"key":8,"value":{"value0":{"value0":1486265466}}},{"key":7,"value":{"value0":{"value0":716910377}}},{"key":6,"value":{"value0":{"value0":1378098871}}},{"key":5,"value":{"value0":{"value0":2859436951}}},{"key":4,"value":{"value0":{"value0":277784490}}},{"key":3,"value":{"value0":{"value0":1603732075}}},{"key":2,"value":{"value0":{"value0":3059521343}}},{"key":1,"value":{"value0":{"value0":2684578967}}},{"key":0,"value":{"value0":{"value0":1868966353}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}}{"value0":{"values":[{"key":15,"value":0},{"key":14,"value":0},{"key":13,"value":0},{"key":12,"value":0},{"key":11,"value":0},{"key":10,"value":0},{"key":9,"value":0},{"key":8,"value":2},{"key":7,"value":0},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":15,"value":1.0},{"key":14,"value":1.0},{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":15,"value":{"value0":{"value0":2824759207}}},{"key":14,"value":{"value0":{"value0":277784490}}},{"key":13,"value":{"value0":{"value0":4236448203}}},{"key":12,"value":{"value0":{"value0":2824759079}}},{"key":11,"value":{"value0":{"value0":3078092489}}},{"key":10,"value":{"value0":{"value0":1556287947}}},{"key":9,"value":{"value0":{"value0":492316980}}},{"key":8,"value":{"value0":{"value0":1486265466}}},{"key":7,"value":{"value0":{"value0":716910377}}},{"key":6,"value":{"value0":{"value0":1378098871}}},{"key":5,"value":{"value0":{"value0":2859436951}}},{"key":4,"value":{"value0":{"value0":277784490}}},{"key":3,"value":{"value0":{"value0":1603732075}}},{"key":2,"value":{"value0":{"value0":3059521343}}},{"key":1,"value":{"value0":{"value0":2684578967}}},{"key":0,"value":{"value0":{"value0":1868966353}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}}Fn-01101111011001100010100111010001:
  QueryStockpile[10001000110100000000011110101110](7,5,6)
  TestEqu[11110101110001100110101001110100](1,0,4)
  CopyMem[01001100110110100110001110111101](2,4,4)

Fn-10100000000000110110110010010111:
  TestNEqu[11010010011110011110111100111100](1,2,0)
  SetRegulator[01010110110101111101001001110101](0,0,3)
  PauseRepr[11101111111010000010000100111111](4,1,0)

Fn-10110110010111001001011100111111:
  PutMembraneBlocker[01011011100010101101010010111111](2,4,1)
  DuplicateReturn[11011000001111100110111010110010](1,4,2)
  SenseRegulator[11111001101010001111101011110011](4,1,1)
  Pull[11111010001000011101110001111100](1,6,1)
  DuplicateDec[00110111111110000001010000001110](3,0,3)
  SetReproductionReserve[10111010111001111001100111100001](4,4,4)

Fn-01011111100101110000001001101011:
  DoApoptosisComplete[10011001010001010101000011111111](8,4,3)
  DuplicateInput[11100010101110000001000000110001](3,0,2)
  SendBigFracResource[11011000001101000101111001111011](0,1,2)

Fn-00010000100011101010011110101010:
  QueryIsLive[10100101101111011011001100001001](7,0,2)
  DuplicateMod[11000110010001101110001111111000](1,1,3)
  DuplicateDiv[01011000100100000010000100001000](3,0,2)
  DuplicateTerminate[01011110011011110001101100000101](1,3,3)
  UnsetHeir[10111001010111101100100101010101](8,2,7)
  DuplicateSetRegulator[01011100110000110101011001110001](1,4,4)
  Pull[11000011111101000001110010000010](3,3,0)
  BcstMsgExternal[01010101100100001101011111011001](4,3,1)
  Nop[10001000111100100001100111111010](1,3,0)
  TestEqu[01111100111000111011000100110010](1,3,0)
  QueryChannelGen-Lev0[11101011010101101110110101010100](4,0,4)
  SendBigFracResource[00001010011000100011010010110011](1,3,4)
  SetMembraneRegulator[00010101101101001000001101001011](3,0,0)

Fn-10101010011011111000101110010111:
  DuplicateNop[01111011010011010101010011010000](2,3,2)
  QueryIsCellChild[11001011010011011110000110010110](3,2,3)
  DuplicateCommit[01110100100110110011001011101111](4,0,2)
  DuplicatePull[11011011101000001110011000111000](1,1,1)
  SetHeir[11101110000100111000011000110011](2,1,0)
  Pull[01101100010101100001010100100000](2,3,1)
  CopyMem[11101101111001101011001011110001](1,4,4)
  DuplicateIf[10111000100011010100011000101000](0,1,0)
    DuplicateInput[11110001111010010011000101000111](1,3,4)
    DuplicateOutput[10110001111001001101100011110011](1,7,5)
    SetStockpileReserve[00010101001110001101110001101110](4,3,1)

Fn-01010010001001000001111010110111:
  TryReproduce-Lev1[11110111110000010011010001110011](1,1,0)
  Mult[00000000010001010110101111111110](4,0,1)
  SetCellAgeBooster-Lev0[10111101010100111011011010100011](6,2,0)
  QueryChannelGen-Lev0[11000100110101100011111000110001](1,5,3)
  Terminate[11111101000011001101100001110001](3,4,2)
  TryReproduce-Lev1[11000100000111011100111000011010](4,2,1)
  DuplicateSenseOwnRegulator[01010100001111001101110011000110](4,4,2)
  DuplicatePull[11101011101101001100010010101010](4,4,3)
  SetGiveSharingFalse[01110101011000111011001000011100](1,2,1)
  SetRegulator[11010110010111000010011100000100](1,1,2)
  DuplicateAdjRegulator[00111100010111010101111011100110](1,3,2)
  Terminate[11111101000011001110110001110001](3,4,2)
  TryReproduce-Lev1[11000100100111011100111100001010](4,7,1)
  DuplicateSenseOwnRegulator[01111110101111011101100011000110](1,4,3)
  DuplicatePull[11101011101101001100010010101010](4,4,3)
  SetGiveSharingFalse[01100101001000111011001000011100](5,2,1)
  SetRegulator[11010110110111000011011100000100](3,3,2)
  DuplicateAdjRegulator[00110100011111010101101001000111](1,3,2)
  SetStockpileReserve[10011110111001110000101100001000](0,0,1)

Fn-00101010101110110010111100101001:
  Pull[00010110001111110010110110110010](2,3,1)
  DuplicateMult[01111011001010010010011001001010](0,4,3)
  PauseRepr-Lev1[10100110010101111101111111110111](2,2,2)
  SenseRegulator[00101110111010000001111001100000](3,1,3)
  QueryIsOlderThan[11000010111001000000100111011000](1,4,4)
  DuplicateExtRegulator[00100001000100110100100011100001](3,5,6)
  DuplicateCommit[11100100000000110111100110101111](3,1,2)

Fn-01011000100101101001110001111010:
  DuplicateClose[10111101111100111101011110000100](2,3,4)
  AdjMembraneRegulator[01101101000000111111111111100110](1,4,0)
  DuplicateRng[00101101111110110101101011000110](3,1,3)
  Break[10011110010010100000011011100011](2,2,0)
  PutInternalMembraneBringer[00100101000011011111000110111100](7,0,0)
  TestNEqu[01110000001100101011000111101101](5,3,4)
  QueryIsPropaguleParent[00110100111011101001101101101110](0,4,2)
  Input[10101010110000011000100101110001](3,4,3)
  DuplicateInput[00000110110101101001010101111111](2,1,1)
  DuplicateIf[11010001011110101101111011111010](2,3,2)
    DuplicateSenseRegulator[11000010101111101000010111011111](3,2,0)
    Close[11000011010111101101011100011010](7,7,3)
  DuplicateSenseRegulator[11101110011110101100010111001110](0,3,4)

Fn-00011101010110000010100100110100:
  Terminal1[11001101010000010110001011010001](4,1,1)
  TryReproduce-Lev0[01001101110001110101001111111100](1,2,4)
  DuplicateOutput[00111010011000001000111011111010](3,2,1)
  SetCellAgeBooster-Lev1[00010110101110000000011110110001](3,2,2)
  DuplicateDec[11010000000100100010101010010000](4,3,2)

Fn-01011100110000110001000111001011:
  DuplicateTerminate[01000110101000100000000011001001](2,1,4)

Fn-10110111011101111111011011001001:
  Sub[01100000001011001100111010100001](2,3,2)

Fn-10101000010111100110011100100111:
  DuplicateMult[00111101001111010010000111101011](3,4,0)

Fn-11111100100000110001000111001011:
  DuplicateTerminate[01000110101000110001000011001001](2,1,4)

Fn-00010000100011101010011110101010:
  QueryIsLive[10100101101111011011001101001001](7,0,2)
  PauseRepr-Lev1[10001110000111011111001100111011](1,1,3)
  DuplicateMod[11000100010001101110001111111000](1,1,3)
  DuplicateDiv[01011000100100000010000101001000](3,0,2)
  DuplicateTerminate[01011110011011110001110100000101](1,3,3)
  UnsetHeir[10111001010111101100100101010101](8,2,7)
  DuplicateSetRegulator[01011100110000110101111001010001](1,4,4)
  Pull[11000011111101001001110010000010](3,3,0)
  BcstMsgExternal[01010101100100001111011111011001](4,3,1)
  Nop[10001000111100100001100111001010](1,3,0)
  TestEqu[01111100111010101010000100110010](1,3,0)
  QueryChannelGen-Lev0[11101011010101101110110101010100](4,0,4)
  SendBigFracResource[00001000011000100011010010110011](0,3,4)
  SetMembraneRegulator[00010101101101001000001101001011](3,0,0)

Fn-10101000010111100110011110100111:
  DuplicateMult[00111101001111010010000111101011](3,4,0)

{"value0":{"values":[{"key":15,"value":0},{"key":14,"value":0},{"key":13,"value":0},{"key":12,"value":0},{"key":11,"value":0},{"key":10,"value":0},{"key":9,"value":0},{"key":8,"value":2},{"key":7,"value":0},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":15,"value":1.0},{"key":14,"value":1.0},{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":15,"value":{"value0":{"value0":2824759207}}},{"key":14,"value":{"value0":{"value0":277784490}}},{"key":13,"value":{"value0":{"value0":4236448203}}},{"key":12,"value":{"value0":{"value0":2824759079}}},{"key":11,"value":{"value0":{"value0":3078092489}}},{"key":10,"value":{"value0":{"value0":1556287947}}},{"key":9,"value":{"value0":{"value0":492316980}}},{"key":8,"value":{"value0":{"value0":1486265466}}},{"key":7,"value":{"value0":{"value0":716910377}}},{"key":6,"value":{"value0":{"value0":1378098871}}},{"key":5,"value":{"value0":{"value0":2859436951}}},{"key":4,"value":{"value0":{"value0":277784490}}},{"key":3,"value":{"value0":{"value0":1603732075}}},{"key":2,"value":{"value0":{"value0":3059521343}}},{"key":1,"value":{"value0":{"value0":2684578967}}},{"key":0,"value":{"value0":{"value0":1868966353}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}}{"value0":{"values":[{"key":15,"value":0},{"key":14,"value":0},{"key":13,"value":0},{"key":12,"value":0},{"key":11,"value":0},{"key":10,"value":0},{"key":9,"value":0},{"key":8,"value":2},{"key":7,"value":0},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":15,"value":1.0},{"key":14,"value":1.0},{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":15,"value":{"value0":{"value0":2824759207}}},{"key":14,"value":{"value0":{"value0":277784490}}},{"key":13,"value":{"value0":{"value0":4236448203}}},{"key":12,"value":{"value0":{"value0":2824759079}}},{"key":11,"value":{"value0":{"value0":3078092489}}},{"key":10,"value":{"value0":{"value0":1556287947}}},{"key":9,"value":{"value0":{"value0":492316980}}},{"key":8,"value":{"value0":{"value0":1486265466}}},{"key":7,"value":{"value0":{"value0":716910377}}},{"key":6,"value":{"value0":{"value0":1378098871}}},{"key":5,"value":{"value0":{"value0":2859436951}}},{"key":4,"value":{"value0":{"value0":277784490}}},{"key":3,"value":{"value0":{"value0":1603732075}}},{"key":2,"value":{"value0":{"value0":3059521343}}},{"key":1,"value":{"value0":{"value0":2684578967}}},{"key":0,"value":{"value0":{"value0":1868966353}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}}#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=48:00:00
#SBATCH --array=1-20
#SBATCH --mem=8G
#SBATCH --job-name ko-1034-propagule
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="seed=1034+title=propagule+treat=resource-wave__channelsense-yes__nlev-two"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny-knockout/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/knockout/"${TREATMENT}"/"

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;
./dishtiny -SEED ${SEED} -RUN_LENGTH 270336 >run.log 2>&1

###############################################################################
echo "Done"
################################################################################
# Source Update

`2**20`

# ID Key
1. wild type
2. knockout
  * `TryReproduce-Lev2` (internal propagule generation)

# Knockout Prep

```
for f in *; do cp $f id=1+$f; done
for f in c*; do mv $f id=2+$f; done
sed -i -- 's/TryReproduce-Lev2/Nop/g' id\=2+component\=program*
```
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 8           # How far can a signal propagate?
set EVENT_RADIUS 2             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.2         # How much resource benefit does a successful harvest grant?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=4:00:00
#SBATCH --array=1-2
#SBATCH --mem=8G
#SBATCH --job-name ko-1034-propagule-phenotype
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

TREATMENT="seed=1034+title=propagule+treat=resource-wave__channelsense-yes__nlev-two"
SEED=1

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny-knockout/"${TREATMENT}"/id="${SLURM_ARRAY_TASK_ID}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/knockout/"${TREATMENT}"/"

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;
./dishtiny -SEED ${SEED} -SEED_POP_ID ${SLURM_ARRAY_TASK_ID} -RUN_LENGTH 8192 >run.log 2>&1

###############################################################################
echo "Done"
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 2                         # Number hierarchical resource levels

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics
set SEED_POP 1

set TREATMENT_DESCRIPTOR resource-wave__channelsense-yes__nlev-two       # Treatment identifying slug
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 6             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.2         # How much resource benefit does a successful harvest grant?
{"value0":{"values":[{"key":13,"value":0},{"key":12,"value":1},{"key":11,"value":0},{"key":10,"value":0},{"key":9,"value":0},{"key":8,"value":0},{"key":7,"value":0},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":18446744073709551613},{"key":0,"value":0}],"regulators":[{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.1604285188233324},{"key":0,"value":1.0}],"tags":[{"key":13,"value":{"value0":{"value0":3443125414}}},{"key":12,"value":{"value0":{"value0":867020314}}},{"key":11,"value":{"value0":{"value0":3385942940}}},{"key":10,"value":{"value0":{"value0":501239490}}},{"key":9,"value":{"value0":{"value0":3058747417}}},{"key":8,"value":{"value0":{"value0":2256972125}}},{"key":7,"value":{"value0":{"value0":4182706755}}},{"key":6,"value":{"value0":{"value0":445221752}}},{"key":5,"value":{"value0":{"value0":1609968023}}},{"key":4,"value":{"value0":{"value0":1763104028}}},{"key":3,"value":{"value0":{"value0":457973550}}},{"key":2,"value":{"value0":{"value0":1289074461}}},{"key":1,"value":{"value0":{"value0":2463768627}}},{"key":0,"value":{"value0":{"value0":2017810524}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}}Fn-01111000010001010101100001011100:
  QueryIsExpired0[10001011001001001010010011111111](0,4,2)
  DuplicateAdjRegulator[01010111001101100011001110110100](4,1,3)
  Div[01111000001001000010110001011011](4,2,3)
  QueryChannelGen-Lev1[10000000001001110110010110110000](3,4,4)
  ClearReproductionReserve[11100111101111010101101010110000](1,4,3)
  Output[00010010001000000000001110011101](3,1,1)

Fn-10010010110110100010000000110011:
  Not[00001100110000010001111011110110](3,4,3)
  Nop[11111011001011000011101100001010](3,1,2)
  SetCellAgeBooster-Lev0[10110010000010000010011111110010](3,0,3)
  Break[00000011001111010111111111100101](3,0,0)
  DuplicateClose[10011001011010001101110011001011](1,4,4)
  QueryChannelMate-Lev1[00010101100101001001011001000000](3,1,2)
  DuplicateCommit[11100100101101100000111001000100](2,3,2)
  Rng[11101100101010011111000010010101](7,3,1)
  SetMembraneRegulator[11110110101111010001010101000101](4,0,0)
  DuplicateAdjRegulator[01110011001011011001011110011101](1,4,0)
  SetCellAgeBooster-Lev0[00110100101000001110010001110101](3,1,2)
  Pull[10001101010011000011100110110000](4,3,0)
  AdjRegulator[00101010011011011010101100000111](4,4,2)
  DuplicateSenseRegulator[00110100000010101001011101000100](4,2,4)

Fn-01001100110101011011011100011101:
  DuplicateBreak[01111011011110101110111001011001](6,4,3)
  PutMembraneBlocker[01100100101011100001011011011111](0,1,4)
  SetCellAgeBooster-Lev1[10100101100000101101111101001110](0,3,3)
  Nop[11101000110010101101000101101111](4,1,0)
  ExtRegulator[00111000101011101000111010110111](2,1,0)
  TestLess[10101100010010110110010000101011](4,4,1)
  QueryIsPropaguleChild[01110000000000000000001010010001](4,0,4)
  Terminal1[11001111101111101010010101001011](3,3,2)
  QueryIsExpired1[10000011011001101111110001010111](2,3,0)

Fn-00011011010011000001111100101110:
  DuplicateSetRegulator[10011101000110110101000101001111](3,1,4)
  DuplicateTestLess[00001010110100010011100101000101](2,3,7)
  SetReproductionReserve[00110000101111001011010000010110](4,1,7)
  SetGiveSharingFalse[01111101010000010111011101111000](0,2,4)
  QueryIsPropaguleParent[00010111010110000110101110010000](3,1,4)
  SetMembraneRegulator[00001010010010101111110111111110](1,4,4)
  SendMsgInternal[10000011001011101011100111010111](8,8,5)
  Not[10101110010110110010001011011001](2,4,4)
  DuplicatePull[10110100011101100010100000101101](2,0,0)
  QueryOwnStockpile[10100001100011010000100110000001](3,1,1)
  SetOwnRegulator[11011111101001011000101111001000](2,3,6)

Fn-01101001000101101101010100011100:
  DuplicateSwapMem[10100101000011100001010010101101](2,1,0)
  SetStockpileReserve[10010010010111111111001111010011](1,2,4)
  DuplicateCommit[00011100001100100010001000100101](2,1,1)
  SetOwnRegulator[11110011000010001110000110100011](2,6,1)
  TestNEqu[00110011001011011001011000001101](2,0,2)
  SetStockpileReserve[10010010010111111111001111010111](1,2,4)
  DuplicateCommit[00011100001100100010001000100101](2,1,1)
  SetOwnRegulator[11110011010010001110000110100011](2,6,1)
  TestNEqu[00110011001011011001011000001101](2,0,2)
  DuplicateNop[11010110111101110101001010100111](1,4,0)
  DuplicateSetMem[10110000111101111110110000001001](4,0,4)
  TryReproduce-Lev2[10111101010001111110001000100010](6,1,3)
  DuplicateCopyMem[10101111001100010111101000111100](1,2,1)

Fn-01011111111101100010100110010111:
  QueryChannelGen-Lev1[10000000010000000110110100010010](2,3,4)
  Nop[11001000111000110100101010001000](0,0,3)
  SetHeir[00101001010110100110111101001001](0,1,3)
  QueryChannelMate-Lev1[01001110111110011010110100000111](3,3,1)
  SetAcceptSharingFalse[00000001001011110101000100110001](2,0,1)
  PutInternalMembraneBringer[00001001011001000110010000100000](0,3,2)
  Nop[00101010111000010100101010001101](2,0,2)
  Terminal0.125[11010100111000111011001111011110](3,1,4)
  DuplicateDec[10011110001100110000000010011011](5,1,3)
  ClearStockpileReserve[00111110101010111001111010001111](0,2,2)
  Add[00000110010000101000100111010101](3,2,2)
  DuplicateTerminal0.125[10000101110110010001100100111101](1,4,4)
  QueryIsPoorerThan[10101001010111011001110100101100](4,1,7)

Fn-00011010100010011000101101111000:
  DuplicateTestEqu[10101001011010011001011110111011](1,0,0)
  DuplicateSetOwnRegulator[10010011101110000001101010001101](5,8,2)
  PutMembraneBlocker[11010110110101001110100010110101](0,4,4)
  Terminal0.125[11011000010101111110011101101001](4,5,2)
  PutMembraneBringer[00000001011010001010001110001010](2,2,2)
  QueryIsPropaguleParent[00010111001011111100101000100000](2,0,1)
  SenseMembraneRegulator[10011111101001010100111111101001](0,3,4)
  SetCellAgeBooster-Lev1[10001001011001110101100111100111](1,4,0)
  SetHeir[10101101110000110011101001001100](3,1,3)
  AdjOwnRegulator[11111111001001011000111010011111](4,2,1)
  Sub[00101111110101011011000001011111](1,0,1)
  Terminal0.125[10100101001001100011101111101100](6,7,8)
  QueryOwnStockpile[00110010101011101001111011010111](0,1,3)
  DuplicateExtRegulator[01001110000011101000001010010100](0,1,0)
  PutInternalMembraneBringer[10101110101110111001100010011001](1,3,1)

Fn-11111001010011110000101001000011:
  SetCellAgeBooster-Lev1[11011011010101001001001101110011](1,1,3)
  DuplicateMod[01011110111010011111110001011011](4,3,3)
  Nop[00110100100010001110011011100001](3,1,0)
  Terminal1073741824[01100001100110000111000111011001](3,1,0)
  DuplicateClose[11100000011000010011000001110101](3,5,2)
  DuplicateTerminal1[01110001001000000000001011011010](0,2,1)
  QueryIsPoorerThan[11001100001101000111011001000011](1,0,3)
  QueryStockpile[01001011000101001010100011111111](1,2,7)
  DuplicateAdjRegulator[10010010000011011011100001011111](0,0,3)
  BcstMsgExternal[10100000100011000101111010010111](4,4,3)

Fn-10000110100001101010100101011101:
  ActivateInbox[00011111011001111000101001010110](3,3,0)
  DuplicateExtRegulator[00100110010001100110100100001110](1,2,1)
  ExtRegulator[11010111110011110011111110110111](1,0,0)
  TryReproduce-Lev2[00010111111101010010100000100000](1,4,2)
  SetCellAgeBooster-Lev0[01011001111100010111111101110101](8,3,3)
  Input[10110001100000011110010110111110](3,2,2)
  QueryIsExpired0[01111110010101010000100111000101](0,4,4)
  PutInternalMembraneBlocker[10100100100011111101111111001110](6,4,0)
  PauseRepr-Lev2[10011010101000011000100011101100](1,1,4)
  DuplicateTestLess[01111100101111000001110110101101](3,3,3)
  SetAcceptSharingFalse[10000010101111000100111100111001](1,2,4)
  DuplicateInput[11100100001000000100111111000101](1,1,2)
  Return[10100010110001000101101000000101](4,3,1)
  Nop[00110110100101010000011010111100](7,1,0)
  DuplicateTerminal1[00101101111100011101101101100101](4,2,6)
  DuplicateMult[10010011000111100111111101100001](0,3,0)
  Dec[11000010110011111011010001011000](1,3,4)

Fn-10110110010100001100100000011001:
  DuplicateOutput[01101011110010000001110001011110](3,4,0)

Fn-00011101111000000100111011000010:
  PauseRepr[00000110111100111111110010110101](8,1,0)
  DuplicateCommit[10001101000100011011111111111110](1,1,1)
  SwapMem[10100101011010010001011010100010](3,2,2)
  QueryIsOlderThan[00010001011110001100100110101001](2,1,2)
  QueryChannelMate-Lev0[11011010110011000001000110100100](1,1,4)
  Div[11000010111000111101000001010011](3,0,4)
  TryReproduce-Lev1[11000111011011011111100100001001](3,1,2)
  Nop[01100000110110111111011000010010](3,0,0)
  DuplicateCopyMem[01000011010001001011111111011010](2,2,3)
  Mult[10011011101101100011001010011101](2,4,2)
  AdjMembraneRegulator[11111110101111000000101010111100](4,8,6)
  DuplicateDec[01011101100101101111101111001010](1,6,5)
  DuplicateClose[11000100000011100110111111011001](0,3,2)
  QueryOwnStockpile[10100001001000000110101110010110](5,4,3)
  QueryChannelGen-Lev1[11111110101010111000101011110100](4,3,0)
  SetCellAgeBooster-Lev1[11011011000110100000011111010011](1,3,4)
  QueryChannel-Lev0[11111001010010011111101111110111](1,4,4)

Fn-11001001110100010110001110011100:
  QueryChannel-Lev1[01110000111001011111111001000000](0,4,4)
  QueryIsPropaguleParent[01100001011001011011001111000001](1,2,5)
  QueryIsPropaguleParent[11101101111111110111011100111011](0,3,3)
  DuplicateMod[00000101101001010010011111101011](3,2,3)
  Terminate[00110011100111010010010110101010](2,0,0)
  SendMsgInternal[01000110100111110111111111011000](4,0,3)

Fn-00110011101011011010111000011010:
  DuplicateIf[11101110110010111000100001000000](4,4,2)
    DuplicateRng[00001000111110100000110010000010](2,3,0)
    AdjMembraneRegulator[01101100101011011011100010110001](6,2,3)
    DuplicateSub[11001010000100001100100010100001](4,3,0)
    DuplicateSub[10101010000000000100100000000000](4,3,0)
    QueryStockpile[00010101100111000101011110100011](2,1,3)

Fn-11001101001110011110110010100110:
  Terminal1[11000011000010110001011000100010](1,4,3)
  PutInternalMembraneBringer[10000101101001100001010110110111](3,4,2)
  AdjMembraneRegulator[11100101000111110100000100100111](2,3,2)
  DuplicateAdjOwnRegulator[11011100011000011010101001110001](0,4,0)
  TryReproduce-Lev1[00101010110100000010101111100110](3,2,1)
  SenseRegulator[11111000010110011001001011010111](1,1,3)
  QueryIsOlderThan[00011111000000101000001100101110](0,6,0)
  SetGiveSharingTrue[11001110101110101100001010111101](4,4,4)
  Pull[10100010100111011010111100011001](4,2,2)
  Nop[01000101010100011001110100001101](2,3,0)
  SetStockpileReserve[11100010000100001101011101111101](3,0,4)
  UnsetHeir[10110000011111010000010101111111](2,3,2)
  Div[10001100101111010111011100001110](2,4,3)
  SetRegulator[11101110111110011001111010110101](2,2,3)
  SenseMembraneRegulator[10011011101100111101011000101101](3,0,0)
  DuplicateIf[11010010001001111110011110000101](1,1,3)

{"value0":{"values":[{"key":13,"value":0},{"key":12,"value":1},{"key":11,"value":0},{"key":10,"value":0},{"key":9,"value":0},{"key":8,"value":0},{"key":7,"value":0},{"key":6,"value":2},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":4},{"key":1,"value":18446744073709551613},{"key":0,"value":0}],"regulators":[{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.2796278009616753},{"key":0,"value":1.0}],"tags":[{"key":13,"value":{"value0":{"value0":3443125414}}},{"key":12,"value":{"value0":{"value0":867020314}}},{"key":11,"value":{"value0":{"value0":3385942940}}},{"key":10,"value":{"value0":{"value0":501239490}}},{"key":9,"value":{"value0":{"value0":3058747417}}},{"key":8,"value":{"value0":{"value0":2256972125}}},{"key":7,"value":{"value0":{"value0":4182706755}}},{"key":6,"value":{"value0":{"value0":445221752}}},{"key":5,"value":{"value0":{"value0":1609968023}}},{"key":4,"value":{"value0":{"value0":1763104028}}},{"key":3,"value":{"value0":{"value0":457973550}}},{"key":2,"value":{"value0":{"value0":1289074461}}},{"key":1,"value":{"value0":{"value0":2463768627}}},{"key":0,"value":{"value0":{"value0":2017810524}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}}{"value0":{"values":[{"key":13,"value":2},{"key":12,"value":0},{"key":11,"value":0},{"key":10,"value":0},{"key":9,"value":0},{"key":8,"value":0},{"key":7,"value":2},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":18446744073709551613},{"key":0,"value":0}],"regulators":[{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.1461072456174353},{"key":0,"value":1.0}],"tags":[{"key":13,"value":{"value0":{"value0":3443125414}}},{"key":12,"value":{"value0":{"value0":867020314}}},{"key":11,"value":{"value0":{"value0":3385942940}}},{"key":10,"value":{"value0":{"value0":501239490}}},{"key":9,"value":{"value0":{"value0":3058747417}}},{"key":8,"value":{"value0":{"value0":2256972125}}},{"key":7,"value":{"value0":{"value0":4182706755}}},{"key":6,"value":{"value0":{"value0":445221752}}},{"key":5,"value":{"value0":{"value0":1609968023}}},{"key":4,"value":{"value0":{"value0":1763104028}}},{"key":3,"value":{"value0":{"value0":457973550}}},{"key":2,"value":{"value0":{"value0":1289074461}}},{"key":1,"value":{"value0":{"value0":2463768627}}},{"key":0,"value":{"value0":{"value0":2017810524}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}}{"value0":[{"value0":{"value0":1608817340}},{"value0":{"value0":205891422}},{"value0":{"value0":353229906}},{"value0":{"value0":1289998269}},{"value0":{"value0":1612017405}},{"value0":{"value0":185983699}},{"value0":{"value0":2124403702}},{"value0":{"value0":629010042}},{"value0":{"value0":2456413876}},{"value0":{"value0":23383663}},{"value0":{"value0":2122767081}},{"value0":{"value0":124389511}},{"value0":{"value0":3787878063}},{"value0":{"value0":2662702181}},{"value0":{"value0":1399777240}},{"value0":{"value0":4137545220}},{"value0":{"value0":17869748}},{"value0":{"value0":940784205}},{"value0":{"value0":1465405948}},{"value0":{"value0":3545223171}},{"value0":{"value0":4087532928}},{"value0":{"value0":2193198996}},{"value0":{"value0":3381842335}},{"value0":{"value0":1728659325}},{"value0":{"value0":959851606}},{"value0":{"value0":2827487073}}]}{"value0":{"values":[{"key":13,"value":2},{"key":12,"value":2},{"key":11,"value":0},{"key":10,"value":0},{"key":9,"value":0},{"key":8,"value":0},{"key":7,"value":2},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":18446744073709551613},{"key":0,"value":2}],"regulators":[{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0051541082419749},{"key":0,"value":1.0}],"tags":[{"key":13,"value":{"value0":{"value0":3443125414}}},{"key":12,"value":{"value0":{"value0":867020314}}},{"key":11,"value":{"value0":{"value0":3385942940}}},{"key":10,"value":{"value0":{"value0":501239490}}},{"key":9,"value":{"value0":{"value0":3058747417}}},{"key":8,"value":{"value0":{"value0":2256972125}}},{"key":7,"value":{"value0":{"value0":4182706755}}},{"key":6,"value":{"value0":{"value0":445221752}}},{"key":5,"value":{"value0":{"value0":1609968023}}},{"key":4,"value":{"value0":{"value0":1763104028}}},{"key":3,"value":{"value0":{"value0":457973550}}},{"key":2,"value":{"value0":{"value0":1289074461}}},{"key":1,"value":{"value0":{"value0":2463768627}}},{"key":0,"value":{"value0":{"value0":2017810524}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}}#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=48:00:00
#SBATCH --array=1-20
#SBATCH --mem=8G
#SBATCH --job-name ko-1019-wyt
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="seed=1019+title=intermessaging+treat=resource-wave__channelsense-yes__nlev-two"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny-knockout/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/knockout/"${TREATMENT}"/"

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;
./dishtiny -SEED ${SEED} -RUN_LENGTH 270336 >run.log 2>&1

###############################################################################
echo "Done"
################################################################################
# Source Update

`2**20`

# ID Key

1. wild type
2. knockout
  * `BcstMsgExternal`
  * `SendMsgExternal`

# Knockout Prep

```
for f in *; do cp $f id=1+$f; done
for f in c*; do mv $f id=2+$f; done
sed -i -- 's/BcstMsgExternal/Nop/g' id\=2+component\=program*
sed -i -- 's/SendMsgExternal/Nop/g' id\=2+component\=program*
```
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 8           # How far can a signal propagate?
set EVENT_RADIUS 2             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.2         # How much resource benefit does a successful harvest grant?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=4:00:00
#SBATCH --array=1-40
#SBATCH --mem=8G
#SBATCH --job-name ko-1019-intermessaging-phenotype
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

TREATMENT="seed=1019+title=intermessaging+treat=resource-wave__channelsense-yes__nlev-two"
SEED=$(( 1 + ($SLURM_ARRAY_TASK_ID - 1) % 20 ))
POP_ID=$(( 1 + ($SLURM_ARRAY_TASK_ID - 1) / 20 ))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny-knockout/"${TREATMENT}"/id="${POP_ID}"+seed="${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/knockout/"${TREATMENT}"/"

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;
./dishtiny -SEED ${SEED} -SEED_POP_ID ${POP_ID} -RUN_LENGTH 8192 >run.log 2>&1

###############################################################################
echo "Done"
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 2                         # Number hierarchical resource levels

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics
set SEED_POP 1

set TREATMENT_DESCRIPTOR resource-wave__channelsense-yes__nlev-two       # Treatment identifying slug
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 6             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.2         # How much resource benefit does a successful harvest grant?
{"value0":[{"value0":{"value0":1437026243}},{"value0":{"value0":1691475906}},{"value0":{"value0":2164676589}},{"value0":{"value0":690478918}},{"value0":{"value0":3676971528}},{"value0":{"value0":625037980}},{"value0":{"value0":1129377150}},{"value0":{"value0":403946381}},{"value0":{"value0":2818452937}},{"value0":{"value0":2074229633}},{"value0":{"value0":3184125298}},{"value0":{"value0":1696603900}},{"value0":{"value0":3032821882}},{"value0":{"value0":627817656}},{"value0":{"value0":3859181304}},{"value0":{"value0":4103453874}},{"value0":{"value0":2781820763}},{"value0":{"value0":3270527961}},{"value0":{"value0":172816271}},{"value0":{"value0":866929702}},{"value0":{"value0":2083425200}},{"value0":{"value0":3174205171}},{"value0":{"value0":1953443771}},{"value0":{"value0":3767767565}},{"value0":{"value0":3408944138}},{"value0":{"value0":1544223345}}]}{"value0":{"values":[{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":1,"value":{"value0":{"value0":191097878}}},{"key":0,"value":{"value0":{"value0":4279097550}}}],"uids":[0,1]}}Fn-11111111000011011101100011001110:
  Nop[11100110011010111100111110111010](5,4,1)
  SetStockpileReserve[00010100111111001110100000001111](4,7,4)
  SetMembraneRegulator[01001011000110111101001011000000](2,7,2)
  QueryIsOlderThan[00100110111100011001011100001001](0,3,4)
  BcstMsgExternal[00011111011111010010111000001011](4,3,2)
  SenseRegulator[01111000010000000110111001101001](1,2,1)
  QueryIsExpired0[01111100111100111011101001011000](0,3,2)
  QueryIsExpired0[11001101101000011110001100111010](3,0,0)
  TryReproduce-Lev1[10100101010111101010011111010100](1,0,0)
  Nop[00000011001000110110011110111000](1,4,1)
  Commit[10001000010011011000010010000011](3,0,0)
  PutInternalMembraneBlocker[10101111010010010010111000010010](2,2,0)
  Terminal0.125[00101100000011110000011011010010](1,0,6)
  SetStockpileReserve[00100011111001101110101011011011](4,3,4)
  DuplicateCountdown[10011110111010010000100110101101](0,3,4)
    Fork[00000111111110100010001010100001](2,0,6)
    QueryIsExpired0[11100000010001100011000101001000](3,3,2)
    QueryIsExpired0[11101111100000111100101101010110](3,0,2)
    Input[11001110001101111001000001000011](6,8,0)
    DuplicateExtRegulator[00110001110010011001001101100010](2,6,5)
    QueryIsOlderThan[11011101010001110001111001101011](4,3,2)
    DeactivateInbox[10101000010011011100011011000111](3,7,6)
    PutInternalMembraneBlocker[10001111110010011010101100110000](2,2,0)
    DuplicateCountdown[01110110111110111000011100101101](0,3,4)
      PutMembraneBringer[00001111000100001100110001011000](2,5,3)
      BcstMsgExternal[00010111101010010010001010010001](4,3,2)
      QueryIsExpired0[10101100101010011101101110010010](3,0,0)
      TryReproduce-Lev1[01110011010110101010111100011000](1,3,0)
      TryReproduce-Lev2[01111101001011001011110010101111](3,1,4)
      Nop[00111000101100110010001101100010](0,3,2)
      Div[10010100010111011110101001001010](4,3,1)
      QueryIsOlderThan[11010110110110011000111100001101](1,3,3)
      BcstMsgExternal[00011011001011010000011100001011](4,0,4)
      SenseRegulator[01001010001100001110111101100101](1,6,6)
      ActivateInbox[10011001101101001010110000110111](0,3,5)
      Nop[00110101011011101101011100110101](0,3,2)
      Div[10001110001011011010011101011110](4,3,5)
      DuplicateMult[10100100000101011111110001011111](0,1,0)

Fn-00001011011000111110110000010110:
  DuplicateClose[10111100010010110110100000000001](2,7,4)
  PauseRepr[11000101011001000111100100110001](0,0,0)
  DuplicateClose[10110000010111110100100000000001](2,7,4)
  Terminal0.125[11000101011010000111100001011001](0,0,1)
  SendBigFracResource[00001011101101011100011010010001](5,4,3)
  DuplicateClose[10011000011101101100011011101001](5,4,0)
  BcstMsgExternal[00011000011111001010000011000010](3,3,0)
  SetHeir[01110101101000011011100110011011](0,1,1)
  Return[01101011100110011101111001011110](3,1,2)

{"value0":{"values":[{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":1,"value":{"value0":{"value0":191097878}}},{"key":0,"value":{"value0":{"value0":4279097550}}}],"uids":[0,1]}}{"value0":{"values":[{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":1,"value":{"value0":{"value0":191097878}}},{"key":0,"value":{"value0":{"value0":4279097550}}}],"uids":[0,1]}}{"value0":{"values":[{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":1,"value":{"value0":{"value0":191097878}}},{"key":0,"value":{"value0":{"value0":4279097550}}}],"uids":[0,1]}}### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 8           # How far can a signal propagate?
set EVENT_RADIUS 2             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.2         # How much resource benefit does a successful harvest grant?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=167:00:00         # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-40
#SBATCH --mem=8G                # memory required per node - amount of memory (in bytes)
#SBATCH --job-name treat=resource-wave__channelsense-yes__nlev-two     # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="treat=resource-wave__channelsense-yes__nlev-two"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/request/"${TREATMENT}

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Setup DMTCP"
# https://wiki.hpcc.msu.edu/display/ITH/Checkpoint+with+DMTCP
################################################################################

# set a limited stack size so DMTCP could work
ulimit -s 8192

# save coordinators host info in an environment variable
export DMTCP_COORD_HOST=$(hostname)

# ask for a uniqe port at runtime
export DMTCP_COORD_PORT=0

# checkpoint every eight hours
CKPT_WAIT_SEC=$(( 8 * 60 * 60 ))

# back up checkpoints every hour
BAK_WAIT_SEC=$(( 1 * 60 * 60 ))

echo "   DMTCP_COORD_HOST" $DMTCP_COORD_HOST
echo "   DMTCP_COORD_PORT" $DMTCP_COORD_PORT
echo "   CKPT_WAIT_SEC" $CKPT_WAIT_SEC
echo "   BAK_WAIT_SEC" $BAK_WAIT_SEC

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;

# set up background loop
# so we always have at least one previous checkpoint and file state
# mkdir checkpoint_bak
# touch checkpoint_bak/init.dmtcp
# while true; do
#   echo "   BAK SLEEP" $(date)
#   sleep $BAK_WAIT_SEC
#   echo "   BAK WAKE" $(date)
#   # if we have a new checkpoint, shuffle the backups
#   if ! diff *.dmtcp checkpoint_bak/*.dmtcp; then
#     echo "   BAK BEGIN" $(date)
#     rm -rf checkpoint_bakbak
#     mv checkpoint_bak checkpoint_bakbak
#     mkdir checkpoint_bak
#     cp *.csv *.h5 *dmtcp* checkpoint_bak
#     echo "   BAK END" $(date)
#   fi
# done &

# run job with checkpointing
dmtcp_launch -i $CKPT_WAIT_SEC                                                 \
  ./dishtiny -SEED ${SEED} -ANIMATION_FREQUENCY 2097152                        \
  >run.log 2>&1

# when running job fails or finishes, kill the background loop
pkill -P $$

###############################################################################
echo "Done" $(date)
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 2                         # Number hierarchical resource levels

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics

set TREATMENT_DESCRIPTOR resource-wave__channelsense-yes__nlev-two       # Treatment identifying slug
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 6             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.2         # How much resource benefit does a successful harvest grant?
{"value0":{"values":[{"key":6,"value":6},{"key":5,"value":5},{"key":4,"value":4},{"key":3,"value":2},{"key":2,"value":2},{"key":1,"value":3},{"key":0,"value":0}],"regulators":[{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":3.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":6,"value":{"value0":{"value0":1435667611}}},{"key":5,"value":{"value0":{"value0":1184591311}}},{"key":4,"value":{"value0":{"value0":3383619558}}},{"key":3,"value":{"value0":{"value0":843178212}}},{"key":2,"value":{"value0":{"value0":4160862260}}},{"key":1,"value":{"value0":{"value0":3843738151}}},{"key":0,"value":{"value0":{"value0":3239401481}}}],"uids":[0,1,2,3,4,5,6]}}{"value0":{"values":[{"key":6,"value":6},{"key":5,"value":5},{"key":4,"value":4},{"key":3,"value":3},{"key":2,"value":2},{"key":1,"value":1},{"key":0,"value":0}],"regulators":[{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":6,"value":{"value0":{"value0":1435667611}}},{"key":5,"value":{"value0":{"value0":1184591311}}},{"key":4,"value":{"value0":{"value0":3383619558}}},{"key":3,"value":{"value0":{"value0":843178212}}},{"key":2,"value":{"value0":{"value0":4160862260}}},{"key":1,"value":{"value0":{"value0":3843738151}}},{"key":0,"value":{"value0":{"value0":3239401481}}}],"uids":[0,1,2,3,4,5,6]}}{"value0":[{"value0":{"value0":1556253297}},{"value0":{"value0":2846506345}},{"value0":{"value0":1660016822}},{"value0":{"value0":1877646645}},{"value0":{"value0":3470050696}},{"value0":{"value0":4215401486}},{"value0":{"value0":6715290}},{"value0":{"value0":3038847243}},{"value0":{"value0":998353374}},{"value0":{"value0":555548409}},{"value0":{"value0":3678375300}},{"value0":{"value0":2408685783}},{"value0":{"value0":1734912910}},{"value0":{"value0":379211342}},{"value0":{"value0":3098399363}},{"value0":{"value0":274319802}},{"value0":{"value0":1087005113}},{"value0":{"value0":987513703}},{"value0":{"value0":2551355235}},{"value0":{"value0":587004871}},{"value0":{"value0":2845368907}},{"value0":{"value0":2075095475}},{"value0":{"value0":4268306528}},{"value0":{"value0":914065475}},{"value0":{"value0":3119847797}},{"value0":{"value0":2378547687}}]}{"value0":{"values":[{"key":6,"value":6},{"key":5,"value":5},{"key":4,"value":4},{"key":3,"value":3},{"key":2,"value":2},{"key":1,"value":1},{"key":0,"value":0}],"regulators":[{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":6,"value":{"value0":{"value0":1435667611}}},{"key":5,"value":{"value0":{"value0":1184591311}}},{"key":4,"value":{"value0":{"value0":3383619558}}},{"key":3,"value":{"value0":{"value0":843178212}}},{"key":2,"value":{"value0":{"value0":4160862260}}},{"key":1,"value":{"value0":{"value0":3843738151}}},{"key":0,"value":{"value0":{"value0":3239401481}}}],"uids":[0,1,2,3,4,5,6]}}{"value0":{"values":[{"key":6,"value":6},{"key":5,"value":5},{"key":4,"value":4},{"key":3,"value":3},{"key":2,"value":2},{"key":1,"value":1},{"key":0,"value":0}],"regulators":[{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":6,"value":{"value0":{"value0":1435667611}}},{"key":5,"value":{"value0":{"value0":1184591311}}},{"key":4,"value":{"value0":{"value0":3383619558}}},{"key":3,"value":{"value0":{"value0":843178212}}},{"key":2,"value":{"value0":{"value0":4160862260}}},{"key":1,"value":{"value0":{"value0":3843738151}}},{"key":0,"value":{"value0":{"value0":3239401481}}}],"uids":[0,1,2,3,4,5,6]}}### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 8           # How far can a signal propagate?
set EVENT_RADIUS 2             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.2         # How much resource benefit does a successful harvest grant?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=167:00:00         # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-40
#SBATCH --mem=8G                # memory required per node - amount of memory (in bytes)
#SBATCH --job-name treat=resource-wave__channelsense-yes__nlev-two     # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="treat=resource-wave__channelsense-yes__nlev-two"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/request/"${TREATMENT}

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Setup DMTCP"
# https://wiki.hpcc.msu.edu/display/ITH/Checkpoint+with+DMTCP
################################################################################

# set a limited stack size so DMTCP could work
ulimit -s 8192

# save coordinators host info in an environment variable
export DMTCP_COORD_HOST=$(hostname)

# ask for a uniqe port at runtime
export DMTCP_COORD_PORT=0

# checkpoint every eight hours
CKPT_WAIT_SEC=$(( 8 * 60 * 60 ))

# back up checkpoints every hour
BAK_WAIT_SEC=$(( 1 * 60 * 60 ))

echo "   DMTCP_COORD_HOST" $DMTCP_COORD_HOST
echo "   DMTCP_COORD_PORT" $DMTCP_COORD_PORT
echo "   CKPT_WAIT_SEC" $CKPT_WAIT_SEC
echo "   BAK_WAIT_SEC" $BAK_WAIT_SEC

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;

# set up background loop
# so we always have at least one previous checkpoint and file state
# mkdir checkpoint_bak
# touch checkpoint_bak/init.dmtcp
# while true; do
#   echo "   BAK SLEEP" $(date)
#   sleep $BAK_WAIT_SEC
#   echo "   BAK WAKE" $(date)
#   # if we have a new checkpoint, shuffle the backups
#   if ! diff *.dmtcp checkpoint_bak/*.dmtcp; then
#     echo "   BAK BEGIN" $(date)
#     rm -rf checkpoint_bakbak
#     mv checkpoint_bak checkpoint_bakbak
#     mkdir checkpoint_bak
#     cp *.csv *.h5 *dmtcp* checkpoint_bak
#     echo "   BAK END" $(date)
#   fi
# done &

# run job with checkpointing
dmtcp_launch -i $CKPT_WAIT_SEC                                                 \
  ./dishtiny -SEED ${SEED} -ANIMATION_FREQUENCY 2097152                        \
  >run.log 2>&1

# when running job fails or finishes, kill the background loop
pkill -P $$

###############################################################################
echo "Done" $(date)
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 2                         # Number hierarchical resource levels

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics

set TREATMENT_DESCRIPTOR resource-wave__channelsense-yes__nlev-two       # Treatment identifying slug
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 6             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.2         # How much resource benefit does a successful harvest grant?
{"value0":{"values":[{"key":15,"value":0},{"key":14,"value":0},{"key":13,"value":0},{"key":12,"value":0},{"key":11,"value":0},{"key":10,"value":2},{"key":9,"value":0},{"key":8,"value":0},{"key":7,"value":0},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":15,"value":1.0},{"key":14,"value":1.0},{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":15,"value":{"value0":{"value0":3042559076}}},{"key":14,"value":{"value0":{"value0":2807128786}}},{"key":13,"value":{"value0":{"value0":2765612224}}},{"key":12,"value":{"value0":{"value0":4027400695}}},{"key":11,"value":{"value0":{"value0":2565162011}}},{"key":10,"value":{"value0":{"value0":1693322834}}},{"key":9,"value":{"value0":{"value0":2473076969}}},{"key":8,"value":{"value0":{"value0":2434246555}}},{"key":7,"value":{"value0":{"value0":3042567268}}},{"key":6,"value":{"value0":{"value0":2563246309}}},{"key":5,"value":{"value0":{"value0":3583557071}}},{"key":4,"value":{"value0":{"value0":2494797594}}},{"key":3,"value":{"value0":{"value0":3596736889}}},{"key":2,"value":{"value0":{"value0":3658222912}}},{"key":1,"value":{"value0":{"value0":2298838189}}},{"key":0,"value":{"value0":{"value0":2575841389}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}}{"value0":{"values":[{"key":15,"value":0},{"key":14,"value":0},{"key":13,"value":0},{"key":12,"value":0},{"key":11,"value":0},{"key":10,"value":2},{"key":9,"value":0},{"key":8,"value":0},{"key":7,"value":0},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":15,"value":1.0},{"key":14,"value":1.0},{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":15,"value":{"value0":{"value0":3042559076}}},{"key":14,"value":{"value0":{"value0":2807128786}}},{"key":13,"value":{"value0":{"value0":2765612224}}},{"key":12,"value":{"value0":{"value0":4027400695}}},{"key":11,"value":{"value0":{"value0":2565162011}}},{"key":10,"value":{"value0":{"value0":1693322834}}},{"key":9,"value":{"value0":{"value0":2473076969}}},{"key":8,"value":{"value0":{"value0":2434246555}}},{"key":7,"value":{"value0":{"value0":3042567268}}},{"key":6,"value":{"value0":{"value0":2563246309}}},{"key":5,"value":{"value0":{"value0":3583557071}}},{"key":4,"value":{"value0":{"value0":2494797594}}},{"key":3,"value":{"value0":{"value0":3596736889}}},{"key":2,"value":{"value0":{"value0":3658222912}}},{"key":1,"value":{"value0":{"value0":2298838189}}},{"key":0,"value":{"value0":{"value0":2575841389}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}}{"value0":[{"value0":{"value0":3441044667}},{"value0":{"value0":3698960491}},{"value0":{"value0":3539984400}},{"value0":{"value0":2661468849}},{"value0":{"value0":1669572796}},{"value0":{"value0":3260882705}},{"value0":{"value0":2349241902}},{"value0":{"value0":3094155084}},{"value0":{"value0":1403407954}},{"value0":{"value0":4072928428}},{"value0":{"value0":325582685}},{"value0":{"value0":3873015218}},{"value0":{"value0":1615724112}},{"value0":{"value0":1837306658}},{"value0":{"value0":34898435}},{"value0":{"value0":3972480245}},{"value0":{"value0":382947405}},{"value0":{"value0":1061380833}},{"value0":{"value0":2786957555}},{"value0":{"value0":1355247773}},{"value0":{"value0":648818052}},{"value0":{"value0":258358720}},{"value0":{"value0":195704853}},{"value0":{"value0":2028611690}},{"value0":{"value0":3246131996}},{"value0":{"value0":4209097426}}]}{"value0":{"values":[{"key":15,"value":0},{"key":14,"value":0},{"key":13,"value":0},{"key":12,"value":0},{"key":11,"value":0},{"key":10,"value":2},{"key":9,"value":0},{"key":8,"value":0},{"key":7,"value":0},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":15,"value":1.0},{"key":14,"value":1.0},{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":15,"value":{"value0":{"value0":3042559076}}},{"key":14,"value":{"value0":{"value0":2807128786}}},{"key":13,"value":{"value0":{"value0":2765612224}}},{"key":12,"value":{"value0":{"value0":4027400695}}},{"key":11,"value":{"value0":{"value0":2565162011}}},{"key":10,"value":{"value0":{"value0":1693322834}}},{"key":9,"value":{"value0":{"value0":2473076969}}},{"key":8,"value":{"value0":{"value0":2434246555}}},{"key":7,"value":{"value0":{"value0":3042567268}}},{"key":6,"value":{"value0":{"value0":2563246309}}},{"key":5,"value":{"value0":{"value0":3583557071}}},{"key":4,"value":{"value0":{"value0":2494797594}}},{"key":3,"value":{"value0":{"value0":3596736889}}},{"key":2,"value":{"value0":{"value0":3658222912}}},{"key":1,"value":{"value0":{"value0":2298838189}}},{"key":0,"value":{"value0":{"value0":2575841389}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}}{"value0":{"values":[{"key":15,"value":0},{"key":14,"value":0},{"key":13,"value":0},{"key":12,"value":0},{"key":11,"value":0},{"key":10,"value":2},{"key":9,"value":0},{"key":8,"value":0},{"key":7,"value":2},{"key":6,"value":0},{"key":5,"value":0},{"key":4,"value":0},{"key":3,"value":0},{"key":2,"value":0},{"key":1,"value":0},{"key":0,"value":0}],"regulators":[{"key":15,"value":1.0},{"key":14,"value":1.0},{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":15,"value":{"value0":{"value0":3042559076}}},{"key":14,"value":{"value0":{"value0":2807128786}}},{"key":13,"value":{"value0":{"value0":2765612224}}},{"key":12,"value":{"value0":{"value0":4027400695}}},{"key":11,"value":{"value0":{"value0":2565162011}}},{"key":10,"value":{"value0":{"value0":1693322834}}},{"key":9,"value":{"value0":{"value0":2473076969}}},{"key":8,"value":{"value0":{"value0":2434246555}}},{"key":7,"value":{"value0":{"value0":3042567268}}},{"key":6,"value":{"value0":{"value0":2563246309}}},{"key":5,"value":{"value0":{"value0":3583557071}}},{"key":4,"value":{"value0":{"value0":2494797594}}},{"key":3,"value":{"value0":{"value0":3596736889}}},{"key":2,"value":{"value0":{"value0":3658222912}}},{"key":1,"value":{"value0":{"value0":2298838189}}},{"key":0,"value":{"value0":{"value0":2575841389}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}}### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 6             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.6          # How much resource benefit does a successful harvest grant?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=167:00:00         # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-40
#SBATCH --mem=8G                # memory required per node - amount of memory (in bytes)
#SBATCH --job-name treat=resource-wave__channelsense-yes__nlev-onebig     # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="treat=resource-wave__channelsense-yes__nlev-onebig"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/request/"${TREATMENT}

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Setup DMTCP"
# https://wiki.hpcc.msu.edu/display/ITH/Checkpoint+with+DMTCP
################################################################################

# set a limited stack size so DMTCP could work
ulimit -s 8192

# save coordinators host info in an environment variable
export DMTCP_COORD_HOST=$(hostname)

# ask for a uniqe port at runtime
export DMTCP_COORD_PORT=0

# checkpoint every eight hours
CKPT_WAIT_SEC=$(( 8 * 60 * 60 ))

# back up checkpoints every hour
BAK_WAIT_SEC=$(( 1 * 60 * 60 ))

echo "   DMTCP_COORD_HOST" $DMTCP_COORD_HOST
echo "   DMTCP_COORD_PORT" $DMTCP_COORD_PORT
echo "   CKPT_WAIT_SEC" $CKPT_WAIT_SEC
echo "   BAK_WAIT_SEC" $BAK_WAIT_SEC

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;

# set up background loop
# so we always have at least one previous checkpoint and file state
# mkdir checkpoint_bak
# touch checkpoint_bak/init.dmtcp
# while true; do
#   echo "   BAK SLEEP" $(date)
#   sleep $BAK_WAIT_SEC
#   echo "   BAK WAKE" $(date)
#   # if we have a new checkpoint, shuffle the backups
#   if ! diff *.dmtcp checkpoint_bak/*.dmtcp; then
#     echo "   BAK BEGIN" $(date)
#     rm -rf checkpoint_bakbak
#     mv checkpoint_bak checkpoint_bakbak
#     mkdir checkpoint_bak
#     cp *.csv *.h5 *dmtcp* checkpoint_bak
#     echo "   BAK END" $(date)
#   fi
# done &

# run job with checkpointing
dmtcp_launch -i $CKPT_WAIT_SEC                                                 \
  ./dishtiny -SEED ${SEED} -ANIMATION_FREQUENCY 2097152                        \
  >run.log 2>&1

# when running job fails or finishes, kill the background loop
pkill -P $$

###############################################################################
echo "Done" $(date)
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 1                         # Number hierarchical resource levels

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics

set TREATMENT_DESCRIPTOR resource-wave__channelsense-yes__nlev-onebig       # Treatment identifying slug
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=48:00:00
#SBATCH --array=1-20
#SBATCH --mem=8G
#SBATCH --job-name ko-1021
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="seed=1021+title=apoptosis+treat=resource-wave__channelsense-yes__nlev-onebig"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny-knockout/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/knockout/"${TREATMENT}"/"

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;
./dishtiny -SEED ${SEED} -RUN_LENGTH 270336 >run.log 2>&1

###############################################################################
echo "Done"
################################################################################
# Source Update

`2**20`

# ID Key

1. wild type
2. knockout
  * `DoApoptosisComplete`

# Knockout Prep

```
for f in *; do cp $f id=1+$f; done
for f in c*; do mv $f id=2+$f; done
sed -i -- 's/DoApoptosisComplete/Nop/g' id\=2+component\=program*
```
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 6             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.6          # How much resource benefit does a successful harvest grant?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=4:00:00
#SBATCH --array=1-2
#SBATCH --mem=8G
#SBATCH --job-name ko-1021-apoptosis-phenotype
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

TREATMENT="seed=1021+title=apoptosis+treat=resource-wave__channelsense-yes__nlev-onebig"
SEED=1

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny-knockout/"${TREATMENT}"/id="${SLURM_ARRAY_TASK_ID}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/knockout/"${TREATMENT}"/"

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;
./dishtiny -SEED ${SEED} -SEED_POP_ID ${SLURM_ARRAY_TASK_ID} -RUN_LENGTH 8192 >run.log 2>&1

###############################################################################
echo "Done"
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 1                         # Number hierarchical resource levels

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics
set SEED_POP 1

set TREATMENT_DESCRIPTOR resource-wave__channelsense-yes__nlev-onebig       # Treatment identifying slug
{"value0":[{"value0":{"value0":2584171617}},{"value0":{"value0":2613583747}},{"value0":{"value0":3237037413}},{"value0":{"value0":1407019108}},{"value0":{"value0":1604203529}},{"value0":{"value0":589355055}},{"value0":{"value0":2057801846}},{"value0":{"value0":2313709934}},{"value0":{"value0":4188816517}},{"value0":{"value0":1039171789}},{"value0":{"value0":2355025254}},{"value0":{"value0":884460231}},{"value0":{"value0":205507029}},{"value0":{"value0":809438000}},{"value0":{"value0":190232650}},{"value0":{"value0":4250027365}},{"value0":{"value0":1046270252}},{"value0":{"value0":1960528970}},{"value0":{"value0":4068561458}},{"value0":{"value0":3810084978}}]}{"value0":{"values":[{"key":13,"value":13},{"key":12,"value":12},{"key":11,"value":11},{"key":10,"value":10},{"key":9,"value":9},{"key":8,"value":8},{"key":7,"value":7},{"key":6,"value":6},{"key":5,"value":5},{"key":4,"value":4},{"key":3,"value":3},{"key":2,"value":2},{"key":1,"value":1},{"key":0,"value":0}],"regulators":[{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":13,"value":{"value0":{"value0":2292535452}}},{"key":12,"value":{"value0":{"value0":2412092390}}},{"key":11,"value":{"value0":{"value0":774677060}}},{"key":10,"value":{"value0":{"value0":258341494}}},{"key":9,"value":{"value0":{"value0":2391122752}}},{"key":8,"value":{"value0":{"value0":3371503395}}},{"key":7,"value":{"value0":{"value0":774414916}}},{"key":6,"value":{"value0":{"value0":986873466}}},{"key":5,"value":{"value0":{"value0":766863232}}},{"key":4,"value":{"value0":{"value0":2948963046}}},{"key":3,"value":{"value0":{"value0":1592412009}}},{"key":2,"value":{"value0":{"value0":3277424282}}},{"key":1,"value":{"value0":{"value0":3371503399}}},{"key":0,"value":{"value0":{"value0":2292543700}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}}{"value0":{"values":[{"key":13,"value":2},{"key":12,"value":12},{"key":11,"value":11},{"key":10,"value":10},{"key":9,"value":9},{"key":8,"value":8},{"key":7,"value":7},{"key":6,"value":6},{"key":5,"value":5},{"key":4,"value":4},{"key":3,"value":3},{"key":2,"value":2},{"key":1,"value":1},{"key":0,"value":2}],"regulators":[{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":13,"value":{"value0":{"value0":2292535452}}},{"key":12,"value":{"value0":{"value0":2412092390}}},{"key":11,"value":{"value0":{"value0":774677060}}},{"key":10,"value":{"value0":{"value0":258341494}}},{"key":9,"value":{"value0":{"value0":2391122752}}},{"key":8,"value":{"value0":{"value0":3371503395}}},{"key":7,"value":{"value0":{"value0":774414916}}},{"key":6,"value":{"value0":{"value0":986873466}}},{"key":5,"value":{"value0":{"value0":766863232}}},{"key":4,"value":{"value0":{"value0":2948963046}}},{"key":3,"value":{"value0":{"value0":1592412009}}},{"key":2,"value":{"value0":{"value0":3277424282}}},{"key":1,"value":{"value0":{"value0":3371503399}}},{"key":0,"value":{"value0":{"value0":2292543700}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}}Fn-10001000101001010111000011010100:
  Nop[11000011010100111111000000111001](2,3,3)
  SetCellAgeBooster-Lev0[01101111000110000011111110010000](8,6,0)
  Terminal1073741824[01010000101110000011101011011111](2,3,0)
  SetOwnRegulator[11000110101001101110000000001010](2,3,4)
  ExtRegulator[10111011101000110000011110111000](4,3,7)
  QueryIsPoorerThan[00111010101111010010000101110100](0,5,7)
  DuplicateCall[01100111000100010111010101010011](4,5,4)
  SendSmallFracResource[00011001100111001000000011011010](0,2,6)
  SenseOwnRegulator[01001000001011011101101100000001](4,1,4)
  DeactivateInbox[01111001100101011010101110001011](4,2,3)
  SendSmallFracResource[10011000001000111111100000111110](0,5,2)
  SenseOwnRegulator[10110010010011010110001100010011](6,1,1)
  PauseRepr[00000001101011101111010111001110](4,4,0)
  DuplicateBreak[10101000111011101001110001101001](4,3,0)
  QueryChannelGen-Lev0[10101101010000110000000111110100](2,6,4)
  SenseMembraneRegulator[10000010000101011001101001011100](2,1,1)
  SenseMembraneRegulator[10000010000101011000100001011000](2,1,1)
  Terminal0.125[01000010000101000010001110111000](1,0,7)
  TryReproduce-Lev1[01110000000010100011001111010100](4,1,0)
  UnsetHeir[00001111001111101010011101101000](6,3,3)
  Mult[10010011110100011111011011001010](3,4,0)
  Nop[00001110011010100000101111110110](0,1,4)
  SetGiveSharingTrue[00010000110111110100100001011101](3,3,0)
  TestLess[11111110000100110111001011110100](6,0,4)
  Sub[11010110001000000000111100001111](2,3,4)

Fn-11001000111101010000111100100111:
  DuplicateInc[01010110110100010110000010100101](2,1,4)
  DuplicateNot[10101000001111011000001110000000](1,3,1)

Fn-11000011010110011000011010011010:
  QueryIsPoorerThan[11010001111011001010101110010101](2,4,1)
  Rng[00110000001111000000101001111111](2,2,2)
  Inc[00001101001011100011110011110111](0,4,1)
  Inc[11011000010101110000100010111111](3,0,4)
  AdjRegulator[11111011111001100011011100000000](0,1,0)
  QueryChannelGen-Lev0[11100011101010010001011010110100](8,8,5)
  DuplicateSetOwnRegulator[01000001101101010000011110100101](0,2,4)
  SenseMembraneRegulator[10010000100101011001100100011011](3,0,4)
  AdjRegulator[01110011101111100110111100010100](0,1,1)
  DuplicateSetOwnRegulator[01010011110100000000001100100111](0,2,4)
  Not[11111000111000000110011001100010](2,6,3)
  QueryIsExpired0[10001010111100110101001000001111](1,0,1)
  AdjRegulator[01111011101001100110111100000100](0,1,0)
  AdjRegulator[11111011111001100011111100000000](0,1,0)
  QueryChannelGen-Lev0[11100011101010010001011010110100](8,8,5)
  DuplicateSetOwnRegulator[01000001101101010000010110111101](0,2,4)
  SenseMembraneRegulator[10010000100101011001100100011011](3,0,4)
  AdjRegulator[01110011101111100110111100010100](0,1,1)
  DuplicateSetOwnRegulator[01000011110100010000001100100111](0,2,4)
  Not[11111001111000000110011001100010](2,6,3)
  QueryIsExpired0[10001010111100110101001000001111](1,0,1)
  AdjRegulator[01111011101011100110111100010100](0,1,0)
  DuplicateSetOwnRegulator[01010001111101010000111110100101](0,2,4)
  SenseMembraneRegulator[11001000000101010100000000111010](3,3,4)
  DuplicateDiv[10110011000011100010111010101111](3,0,7)
  AdjRegulator[01000011100111100110111100010100](0,1,1)
  DuplicateSetOwnRegulator[01100111110101010001101110100111](0,2,4)
  TestLess[11001011101001100100000011011111](5,1,3)
  Terminal0.125[01101100111110110000101111111001](3,1,3)
  Add[11011111111111011000000101011011](2,3,1)
  SendSmallFracResource[11001011011110011010100010001011](1,6,3)
  DuplicateSub[10111110101000110111110001101111](8,0,3)

Fn-01011110111010100100011101101001:
  Return[10101011001010101000000010001111](5,2,3)
  Nop[11011000001100001111011100000000](4,4,4)
  ActivateInbox[11101101011110000101001101111000](5,7,2)
  QueryIsCellParent[10001010111101010111010010100011](5,6,1)
  DuplicateNop[01000110011100000010010011001001](3,1,3)
  UnsetHeir[00010000111011010110110100010111](6,0,5)
  PutInternalMembraneBringer[10000101010001000101101110110110](4,4,1)

Fn-10101111110001011001101011100110:
  DuplicateTestNEqu[10110000010000010000001000001010](3,4,6)
  Div[11010011110110010010111111111011](6,2,6)
  DuplicateNot[00100111011111011111001001011101](4,2,3)
  Terminal1[11001011001001010000000011010000](0,1,6)
  DuplicateTerminal1073741824[11011011001001110001101011010111](2,2,1)

Fn-00101101101101010110011110000000:
  DuplicateSetMem[10101111011110000011101010100100](0,3,0)
  SetHeir[11111100011011001101011101011101](0,0,2)
  DuplicateSetMem[00100001001011111001000001011011](2,0,2)
  DuplicateRng[00111100111111110100111010111010](3,2,4)
  DuplicateOutput[11011010100111111100000011100101](6,0,3)
  Terminal1073741824[00010001010010110011110101101000](0,1,5)
  DuplicateReturn[10100100100111100111001110111010](3,2,4)
  Return[01100000011111101110110010000011](1,6,0)
  DuplicateMult[01011110110100001000010000010100](7,4,1)
  SetGiveSharingTrue[01000001101110110010010010110101](6,3,6)
  SetMembraneRegulator[00110101001110110100011110101001](7,1,2)

Fn-00111010110100100111111001111010:
  SetMembraneRegulator[01101000000101001010000011100101](1,5,1)

Fn-00101110001010001010001001000100:
  QueryChannelMate-Lev0[00110000101010001110100000000000](4,4,5)
  DuplicateAdjRegulator[10001001001001011111011010011010](6,5,3)
  AdjMembraneRegulator[11101111011100011001010010000110](2,1,1)
  TryReproduce-Lev0[11101111111010101000101101101011](2,0,1)

Fn-11001000111101010000111100100011:
  Fork[01010110110101010110000010100101](2,1,5)
  DuplicateNot[10101000001111011000001110000100](1,3,1)

Fn-10001110100001011010001101000000:
  DuplicateInput[10001111011010101001111101111100](4,6,3)
  CopyMem[01011100110110110000011100011111](4,0,1)
  ClearReproductionReserve[10000101000011010001010001011100](7,0,8)
  QueryChannelGen-Lev0[10110011001001101000110110101110](1,0,3)
  AdjOwnRegulator[10000111010010101011111001110101](4,5,3)
  TryReproduce-Lev1[01100101010011010011001011100001](0,0,0)
  DuplicateTerminal8[01000011101010011000000100101000](5,0,3)
  DoApoptosisComplete[11101001100001111000000100000100](2,4,2)

Fn-00001111011001011111101001110110:
  DuplicateTestNEqu[10110000010110000000010100000010](6,4,3)
  Div[01100010110110010010110011110011](6,2,6)
  DuplicateNot[00000001011111111111001001011101](4,2,4)
  Not[11010001001001110001111011000110](2,7,5)

Fn-00101110001011001010001001000100:
  DuplicateAdjRegulator[10001000001011011111001010011010](6,5,3)
  DuplicateAdjRegulator[10001001001011011111001010011010](6,5,3)
  AdjMembraneRegulator[11101111010100011101010010010110](2,1,1)
  TryReproduce-Lev0[11101111111010111100100101101111](2,0,1)

Fn-10001111110001011001101111100110:
  Rng[11101110111110100010101010110100](5,5,5)
  DuplicateTestNEqu[10110001010000010000011000001010](3,4,6)
  Div[11010011110110010100111010111011](6,2,6)
  DuplicateNot[00100011011111011111001000011101](4,5,3)
  Terminal1[00001011000001010000000011011000](0,1,6)
  DuplicateTerminal1073741824[11010011000001110001101011010111](2,2,1)

Fn-10001000101001010101000010011100:
  Nop[11000011010100111111000000111001](2,3,3)
  SetCellAgeBooster-Lev0[01111111000110000011111010010000](8,3,0)
  Terminal1073741824[11011000101110000011101101011111](2,3,0)
  SetOwnRegulator[10000110001001101110000000101011](2,3,4)
  ExtRegulator[10011011101000110000011110111101](2,3,7)
  QueryIsPoorerThan[00110010101111010110000101110100](0,5,7)
  DuplicateAdjOwnRegulator[11100111000100010111110101010011](4,5,4)
  SendSmallFracResource[00111001100111001001000011011010](0,2,6)
  SenseOwnRegulator[01001000001011011101101100000001](4,1,4)
  DeactivateInbox[01111001100101011010101110001011](4,2,3)
  SendSmallFracResource[10011000101001111111100000101111](0,5,2)
  DuplicateFork[10100010010001001110001100010011](6,1,2)
  PauseRepr[00000001101011101111000111010110](4,4,0)
  DuplicateBreak[10101000110011101001010101101001](4,3,0)
  QueryChannelGen-Lev0[11100001010000110000000111110100](2,6,4)
  SenseMembraneRegulator[10000010000101011001101000011100](2,1,1)
  SenseMembraneRegulator[10000011000111011000100001010100](2,1,2)
  Terminal0.125[01000010000101000010001110111000](1,0,7)
  TryReproduce-Lev1[01110000000010100011001111010100](4,1,0)
  UnsetHeir[00001111001111101010011100101010](6,3,4)
  Mult[10010111110100011101011011001011](3,4,0)
  Nop[10011110011010100000101111110010](7,1,4)
  QueryIsCellChild[00010001110011110100100001011101](3,3,0)
  TestLess[11111110010110010111001011110101](6,0,4)
  Sub[11000110001000010000111100001111](2,3,4)

{"value0":{"values":[{"key":13,"value":13},{"key":12,"value":12},{"key":11,"value":11},{"key":10,"value":10},{"key":9,"value":9},{"key":8,"value":8},{"key":7,"value":7},{"key":6,"value":6},{"key":5,"value":5},{"key":4,"value":4},{"key":3,"value":3},{"key":2,"value":2},{"key":1,"value":1},{"key":0,"value":0}],"regulators":[{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":13,"value":{"value0":{"value0":2292535452}}},{"key":12,"value":{"value0":{"value0":2412092390}}},{"key":11,"value":{"value0":{"value0":774677060}}},{"key":10,"value":{"value0":{"value0":258341494}}},{"key":9,"value":{"value0":{"value0":2391122752}}},{"key":8,"value":{"value0":{"value0":3371503395}}},{"key":7,"value":{"value0":{"value0":774414916}}},{"key":6,"value":{"value0":{"value0":986873466}}},{"key":5,"value":{"value0":{"value0":766863232}}},{"key":4,"value":{"value0":{"value0":2948963046}}},{"key":3,"value":{"value0":{"value0":1592412009}}},{"key":2,"value":{"value0":{"value0":3277424282}}},{"key":1,"value":{"value0":{"value0":3371503399}}},{"key":0,"value":{"value0":{"value0":2292543700}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}}{"value0":{"values":[{"key":13,"value":2},{"key":12,"value":12},{"key":11,"value":11},{"key":10,"value":10},{"key":9,"value":9},{"key":8,"value":8},{"key":7,"value":7},{"key":6,"value":6},{"key":5,"value":5},{"key":4,"value":4},{"key":3,"value":3},{"key":2,"value":2},{"key":1,"value":1},{"key":0,"value":2}],"regulators":[{"key":13,"value":1.0},{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":13,"value":{"value0":{"value0":2292535452}}},{"key":12,"value":{"value0":{"value0":2412092390}}},{"key":11,"value":{"value0":{"value0":774677060}}},{"key":10,"value":{"value0":{"value0":258341494}}},{"key":9,"value":{"value0":{"value0":2391122752}}},{"key":8,"value":{"value0":{"value0":3371503395}}},{"key":7,"value":{"value0":{"value0":774414916}}},{"key":6,"value":{"value0":{"value0":986873466}}},{"key":5,"value":{"value0":{"value0":766863232}}},{"key":4,"value":{"value0":{"value0":2948963046}}},{"key":3,"value":{"value0":{"value0":1592412009}}},{"key":2,"value":{"value0":{"value0":3277424282}}},{"key":1,"value":{"value0":{"value0":3371503399}}},{"key":0,"value":{"value0":{"value0":2292543700}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}}#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=48:00:00
#SBATCH --array=1-20
#SBATCH --mem=8G
#SBATCH --job-name ko-1024
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="seed=1024+title=intramessaging+treat=resource-even__channelsense-yes__nlev-two"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny-knockout/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/knockout/"${TREATMENT}"/"

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;
./dishtiny -SEED ${SEED} -RUN_LENGTH 270336 >run.log 2>&1

###############################################################################
echo "Done"
################################################################################
# Source Update

`2**20`

# ID Key

1. wild type
2. knockout
  * `BcstMsgInternal`
  * `SendMsgInternal`

# Knockout Prep

```
for f in *; do cp $f id=1+$f; done
for f in c*; do mv $f id=2+$f; done
sed -i -- 's/BcstMsgInternal/Nop/g' id\=2+component\=program*
sed -i -- 's/SendMsgInternal/Nop/g' id\=2+component\=program*
```
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 8           # How far can a signal propagate?
set EVENT_RADIUS 2             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0            # How much resource benefit does a successful harvest grant?
set ACTIVATION_COST 0          # How much resource is spent to attempt a harvest?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=4:00:00
#SBATCH --array=1-2
#SBATCH --mem=8G
#SBATCH --job-name ko-1024-regulation-phenotype
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

TREATMENT="seed=1024+title=intramessaging+treat=resource-even__channelsense-yes__nlev-two"
SEED=1

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny-knockout/"${TREATMENT}"/id="${SLURM_ARRAY_TASK_ID}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/knockout/"${TREATMENT}"/"

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;
./dishtiny -SEED ${SEED} -SEED_POP_ID ${SLURM_ARRAY_TASK_ID} -RUN_LENGTH 8192 >run.log 2>&1

###############################################################################
echo "Done"
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 2                         # Number hierarchical resource levels
set BASE_RESOURCE_INFLOW 0.0175000  # What amount of resource should be provided to cells at each update?

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics
set SEED_POP 1

set TREATMENT_DESCRIPTOR resource-even__channelsense-yes__nlev-two       # Treatment identifying slug
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 6             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0            # How much resource benefit does a successful harvest grant?
set ACTIVATION_COST 0          # How much resource is spent to attempt a harvest?
{"value0":{"values":[{"key":12,"value":12},{"key":11,"value":11},{"key":10,"value":3},{"key":9,"value":9},{"key":8,"value":8},{"key":7,"value":1},{"key":6,"value":6},{"key":5,"value":5},{"key":4,"value":4},{"key":3,"value":4},{"key":2,"value":2},{"key":1,"value":2},{"key":0,"value":2}],"regulators":[{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":12,"value":{"value0":{"value0":3654403871}}},{"key":11,"value":{"value0":{"value0":2241088705}}},{"key":10,"value":{"value0":{"value0":1967816791}}},{"key":9,"value":{"value0":{"value0":3223802825}}},{"key":8,"value":{"value0":{"value0":992123491}}},{"key":7,"value":{"value0":{"value0":3940076689}}},{"key":6,"value":{"value0":{"value0":1012192720}}},{"key":5,"value":{"value0":{"value0":503377730}}},{"key":4,"value":{"value0":{"value0":4081429421}}},{"key":3,"value":{"value0":{"value0":1319797088}}},{"key":2,"value":{"value0":{"value0":3869054794}}},{"key":1,"value":{"value0":{"value0":1064334982}}},{"key":0,"value":{"value0":{"value0":2453596643}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12]}}{"value0":{"values":[{"key":12,"value":12},{"key":11,"value":11},{"key":10,"value":3},{"key":9,"value":9},{"key":8,"value":8},{"key":7,"value":1},{"key":6,"value":6},{"key":5,"value":5},{"key":4,"value":4},{"key":3,"value":4},{"key":2,"value":2},{"key":1,"value":2},{"key":0,"value":2}],"regulators":[{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":12,"value":{"value0":{"value0":3654403871}}},{"key":11,"value":{"value0":{"value0":2241088705}}},{"key":10,"value":{"value0":{"value0":1967816791}}},{"key":9,"value":{"value0":{"value0":3223802825}}},{"key":8,"value":{"value0":{"value0":992123491}}},{"key":7,"value":{"value0":{"value0":3940076689}}},{"key":6,"value":{"value0":{"value0":1012192720}}},{"key":5,"value":{"value0":{"value0":503377730}}},{"key":4,"value":{"value0":{"value0":4081429421}}},{"key":3,"value":{"value0":{"value0":1319797088}}},{"key":2,"value":{"value0":{"value0":3869054794}}},{"key":1,"value":{"value0":{"value0":1064334982}}},{"key":0,"value":{"value0":{"value0":2453596643}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12]}}{"value0":{"values":[{"key":12,"value":12},{"key":11,"value":11},{"key":10,"value":3},{"key":9,"value":9},{"key":8,"value":8},{"key":7,"value":1},{"key":6,"value":6},{"key":5,"value":2},{"key":4,"value":4},{"key":3,"value":4},{"key":2,"value":2},{"key":1,"value":2},{"key":0,"value":2}],"regulators":[{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":12,"value":{"value0":{"value0":3654403871}}},{"key":11,"value":{"value0":{"value0":2241088705}}},{"key":10,"value":{"value0":{"value0":1967816791}}},{"key":9,"value":{"value0":{"value0":3223802825}}},{"key":8,"value":{"value0":{"value0":992123491}}},{"key":7,"value":{"value0":{"value0":3940076689}}},{"key":6,"value":{"value0":{"value0":1012192720}}},{"key":5,"value":{"value0":{"value0":503377730}}},{"key":4,"value":{"value0":{"value0":4081429421}}},{"key":3,"value":{"value0":{"value0":1319797088}}},{"key":2,"value":{"value0":{"value0":3869054794}}},{"key":1,"value":{"value0":{"value0":1064334982}}},{"key":0,"value":{"value0":{"value0":2453596643}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12]}}Fn-10010010001111101110100111100011:
  PauseRepr-Lev0[11101010010111110010100101010110](7,7,5)
  ClearReproductionReserve[01111100101100110011000110111011](6,8,8)
  DuplicateIf[11100101000101111100001001001110](4,2,1)

Fn-00111111011100000111011010000110:
  SetGiveSharingFalse[01011110101100010101001111011100](0,4,3)
  QueryIsOlderThan[01011010111001000010100100100110](4,1,2)
  Nop[11101000010111010010110101101011](0,3,4)

Fn-11100110100111010001011101001010:
  SendBigFracResource[00110101010010010010110011100111](2,6,0)
  SenseRegulator[00001100110110000010111100000010](0,1,4)
  DuplicateSetOwnRegulator[00110101110000001110011100010111](0,4,2)
  DuplicateTestLess[11000011000111100100011100010011](1,1,0)

Fn-01001110101010101000000101100000:
  Div[00110111111101010100010110110110](4,2,2)
  DuplicateSenseOwnRegulator[11101001010010011101101001011001](2,1,1)
  SetRegulator[01000110101101001011110011001011](4,3,1)

Fn-11110011010001011010101110101101:
  Nop[01010110111010100011011110000100](4,4,2)
  TryReproduce-Lev0[00110001101111000110010101111010](3,2,1)
  Nop[00010101001101111001000101001000](0,4,2)
  DuplicateTerminal8[10011110110111001000101000001101](0,3,3)
  Nop[01010110110010100011011110000000](4,4,2)
  TryReproduce-Lev0[00110001101101000110110101111010](3,2,1)
  Nop[00010101001101111001000101001000](0,4,2)
  DuplicateTerminal8[11011110110111001000101000001100](0,3,3)
  DuplicatePull[00000111101001101011110100111100](1,2,3)

Fn-00011110000000001110111101000010:
  Add[10001110101000111010110000110001](2,4,1)
  Close[11100110001111101000100001101110](1,3,0)
  Close[00100010001011000011111111111101](3,2,2)
  PauseRepr-Lev1[00010111101111000001110101110001](4,2,1)
  DuplicateOutput[00000011000100000011011001100100](7,8,5)
  SendMsgInternal[10001101000001101110101000100000](2,7,7)
  AdjOwnRegulator[10110010100100010110011111110110](0,2,0)
  Terminal1073741824[11100000011001011100110001110101](4,4,4)
  DuplicateMod[11000111100001000000101101111000](4,3,4)
  AdjOwnRegulator[00110111011001001001010011010100](8,2,6)
  DuplicateTerminal1[01101111100011111010111100110011](5,0,0)
  SetHeir[10011001111101001001001000000101](3,4,2)
  Mult[10111001011010010100100110001000](3,4,0)
  QueryIsLive[00010100010011000111110001111011](2,4,3)
  QueryChannelMate-Lev0[00101011000000101011100001011110](2,3,3)
  QueryChannelMate-Lev1[10001101000101111010111001000100](1,1,0)
  QueryIsExpired1[01000101001010100100000100100000](0,4,0)
  Nop[11000110111111011100100101001000](0,4,0)

Fn-00111100010101001101010111010000:
  DuplicateAdd[01001010110111011110000001001000](1,4,0)
  DuplicateBreak[00100001010011000001000111101000](2,6,3)
  DuplicateInc[00101100100010001111111110001101](4,3,4)
  Sub[10110101010100110101111001110100](0,1,4)
  ActivateInbox[01101011010000101000100011010001](4,1,3)
  PauseRepr[01110110101110001110101010010001](3,1,7)
  Commit[10111101001010000111000001000101](1,4,3)
  SetCellAgeBooster-Lev1[11011111001001100011111001100111](3,0,2)
  DuplicateInput[10110010001000000010011001101000](4,0,4)
  QueryIsPoorerThan[10000000111110011000111110011100](0,1,0)
  ActivateInbox[11111010100001111010011000110100](1,1,2)
  SetAcceptSharingTrue[00011111001111010000001101011111](5,0,4)
  QueryStockpile[01010100011011101110101011000101](5,0,6)
  Output[00111100000001010000101010110101](2,0,2)
  Output[11110101001110000101100101011010](1,1,4)
  TryReproduce-Lev0[11111100110101011000001011000011](4,2,3)

Fn-11101010110110001100110010010001:
  PauseRepr[10101101101001111000011101000111](4,0,5)
  SenseOwnRegulator[00011111011100100000011100111011](4,2,3)
  DuplicateTerminal0.125[10001111001100100110011010011111](4,0,4)
  Nop[00100111010111001101011001111100](2,2,0)
  UnsetHeir[10111010111001000110011011110011](4,0,0)
  DuplicateMod[01101100010001111100101001110000](8,2,3)
  ActivateInbox[11110001010000000000111000101000](2,0,3)
  DuplicateMult[00010111100011011111110000111001](4,4,3)
  DuplicateInc[01111101111111001010000101101001](0,1,4)
  QueryChannel-Lev1[11100111010001110011110000000011](2,2,2)
  QueryStockpile[10000001101011001101011110101001](3,1,4)
  AdjOwnRegulator[00110011001001000111110000001100](4,3,7)
  AdjRegulator[01110011000101100010110011101110](4,4,0)
  DuplicateSetOwnRegulator[00101010001011010010001000101100](4,4,0)
  DuplicateInc[11001100111100100101100101011110](4,2,5)
  Not[11011111111011010111101011100010](4,4,2)

Fn-00111011001000101001101001100011:
  QueryChannelMate-Lev0[10001001101000010101110010100101](3,2,3)
  SwapMem[11011100111010010011010010100001](2,2,1)
  QueryOwnStockpile[10011100011010010001100000100001](2,2,1)
  QueryOwnStockpile[10011100011010010001110000100001](2,2,1)
  DuplicateAdjOwnRegulator[11000000001111011111001111111011](0,1,4)
  Call[10111110111100111011100111001001](3,0,3)
  DuplicateClose[00101101110011011011101000000011](0,2,4)
  SetAcceptSharingTrue[10101110010001110010011111001000](3,4,4)
  SendSmallFracResource[11111001110110000010011100010110](7,2,1)

Fn-11000000001001110101001111001001:
  PutMembraneBlocker[10011010010110010101010000011000](0,3,4)
  SetGiveSharingTrue[10001101000110110001100110100111](1,3,1)
  SetCellAgeBooster-Lev1[00000110111000111000000101110100](0,0,3)
  QueryIsCellParent[00110111001100110000100110011111](3,3,2)

Fn-01110101010010101000000001010111:
  SetStockpileReserve[10111001010000110000011001100110](2,2,0)
  QueryIsCellParent[11111101010110100010101100010011](4,4,1)

Fn-10000101100101000100110011000001:
  ExtRegulator[01001010010010101100001111111101](1,4,2)
  DuplicateCopyMem[11111000101101001001000001001100](2,5,7)
  SetStockpileReserve[10101111101110010101001010111000](4,4,0)
  SetRegulator[10010000101101010101000000101011](1,2,1)
  PutMembraneBringer[10101001110000101101100000010011](0,3,0)
  QueryChannelGen-Lev1[10101100010010000001110100001001](3,3,1)
  DeactivateInbox[10100011111011001011000110010101](3,3,3)
  UnsetHeir[11101111001010111101000000010010](2,4,1)
  Output[10011100001010101000011111000110](4,5,1)
  Div[01101011100001000010100101100101](0,6,2)
  Output[01101111110101110011111001110010](4,0,3)
  DuplicateInc[10011001100010001111100101110100](1,1,3)
  Div[01101011000001011110100011100101](0,2,2)
  DuplicateCommit[01101111100100110011110001100110](4,0,3)
  DuplicateInc[10011000110010001111000101110100](1,1,3)
  Output[10011100001011101000011111000110](4,5,1)
  DuplicateTerminal8[01101011100001000000100101100101](3,6,2)
  Output[01101011110101110011111001110010](4,0,3)
  DuplicateInc[10011001100010001111100101110100](1,1,3)
  Div[01101011000001011110100011100101](0,2,2)
  ClearReproductionReserve[01101111100000110011110001110110](4,0,3)
  DuplicateInc[10011000110010001111000101110100](1,1,3)
  Output[00101101110011110011111001110010](4,0,3)
  DuplicateInc[11000000110010001111000101111111](1,1,3)
  SenseMembraneRegulator[10100010000110010100001110101011](4,2,4)
  PutMembraneBlocker[10000110001011010101110000110100](2,3,2)

Fn-11011001110100011100011100011111:
  QueryIsOlderThan[10100000110101001100011100011000](3,1,2)
  DuplicateCommit[01111001001101011101010110000001](3,4,0)

{"value0":{"values":[{"key":12,"value":12},{"key":11,"value":11},{"key":10,"value":3},{"key":9,"value":9},{"key":8,"value":8},{"key":7,"value":1},{"key":6,"value":6},{"key":5,"value":5},{"key":4,"value":4},{"key":3,"value":4},{"key":2,"value":2},{"key":1,"value":2},{"key":0,"value":2}],"regulators":[{"key":12,"value":1.0},{"key":11,"value":1.0},{"key":10,"value":1.0},{"key":9,"value":1.0},{"key":8,"value":1.0},{"key":7,"value":1.0},{"key":6,"value":1.0},{"key":5,"value":1.0},{"key":4,"value":1.0},{"key":3,"value":1.0},{"key":2,"value":1.0},{"key":1,"value":1.0},{"key":0,"value":1.0}],"tags":[{"key":12,"value":{"value0":{"value0":3654403871}}},{"key":11,"value":{"value0":{"value0":2241088705}}},{"key":10,"value":{"value0":{"value0":1967816791}}},{"key":9,"value":{"value0":{"value0":3223802825}}},{"key":8,"value":{"value0":{"value0":992123491}}},{"key":7,"value":{"value0":{"value0":3940076689}}},{"key":6,"value":{"value0":{"value0":1012192720}}},{"key":5,"value":{"value0":{"value0":503377730}}},{"key":4,"value":{"value0":{"value0":4081429421}}},{"key":3,"value":{"value0":{"value0":1319797088}}},{"key":2,"value":{"value0":{"value0":3869054794}}},{"key":1,"value":{"value0":{"value0":1064334982}}},{"key":0,"value":{"value0":{"value0":2453596643}}}],"uids":[0,1,2,3,4,5,6,7,8,9,10,11,12]}}{"value0":[{"value0":{"value0":1461907573}},{"value0":{"value0":3980215363}},{"value0":{"value0":1394190730}},{"value0":{"value0":1434621301}},{"value0":{"value0":2045127524}},{"value0":{"value0":526238704}},{"value0":{"value0":3833097082}},{"value0":{"value0":492113943}},{"value0":{"value0":2577603365}},{"value0":{"value0":2254465400}},{"value0":{"value0":3752582289}},{"value0":{"value0":1509535010}},{"value0":{"value0":414998437}},{"value0":{"value0":1887259328}},{"value0":{"value0":3126612663}},{"value0":{"value0":3697417622}},{"value0":{"value0":1751124298}},{"value0":{"value0":3307643396}},{"value0":{"value0":1268347567}},{"value0":{"value0":4039256757}},{"value0":{"value0":1112735870}},{"value0":{"value0":3520434082}},{"value0":{"value0":1654345479}},{"value0":{"value0":256885727}},{"value0":{"value0":2305965775}},{"value0":{"value0":4014584277}}]}### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 8           # How far can a signal propagate?
set EVENT_RADIUS 2             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0            # How much resource benefit does a successful harvest grant?
set ACTIVATION_COST 0          # How much resource is spent to attempt a harvest?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=167:00:00         # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-40
#SBATCH --mem=8G                # memory required per node - amount of memory (in bytes)
#SBATCH --job-name treat=resource-even__channelsense-no__nlev-two__mute     # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="treat=resource-even__channelsense-no__nlev-two__mute"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/request/"${TREATMENT}

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;
./dishtiny -SEED ${SEED} >run.log 2>&1

###############################################################################
echo "Done"
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 2                         # Number hierarchical resource levels
set BASE_RESOURCE_INFLOW 0.01750000  # What amount of resource should be provided to cells at each update?
set CHANNELS_VISIBLE 0             # Should channels have any effect in the instruction set and event triggers?

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings
set INBOX_CAPACITY 0             # Capacity of a cell's inbox.

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics

set TREATMENT_DESCRIPTOR resource-even__channelsense-no__nlev-two__mute       # Treatment identifying slug
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 8             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0            # How much resource benefit does a successful harvest grant?
set ACTIVATION_COST 0          # How much resource is spent to attempt a harvest?
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 8           # How far can a signal propagate?
set EVENT_RADIUS 2             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.2         # How much resource benefit does a successful harvest grant?
#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
#SBATCH --time=167:00:00         # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-40
#SBATCH --mem=8G                # memory required per node - amount of memory (in bytes)
#SBATCH --job-name treat=resource-wave__channelsense-yes__nlev-two     # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab
#SBATCH --output="/mnt/home/mmore500/slurmlogs/slurm-%A_%a.out"

################################################################################
echo "Prepare Env Vars"
################################################################################

SEED_OFFSET=1000
TREATMENT="treat=resource-wave__channelsense-yes__nlev-two"
SEED=$((SLURM_ARRAY_TASK_ID + SEED_OFFSET))

OUTPUT_DIR="/mnt/scratch/mmore500/dishtiny/"${TREATMENT}"/"${SEED}"/"
CONFIG_DIR="/mnt/home/mmore500/dishtiny/request/"${TREATMENT}

echo "   TREATMENT" $TREATMENT
echo "   SEED" $SEED
echo "   OUTPUT_DIR" $OUTPUT_DIR
echo "   CONFIG_DIR" $CONFIG_DIR

################################################################################
echo "Setup Work Dir"
################################################################################
rm -rf ${OUTPUT_DIR}/*  #If this is a redo, clear the dir
mkdir -p ${OUTPUT_DIR}
cp -r ${CONFIG_DIR}/* ${OUTPUT_DIR}
cd ${OUTPUT_DIR}

################################################################################
echo "Setup DMTCP"
# https://wiki.hpcc.msu.edu/display/ITH/Checkpoint+with+DMTCP
################################################################################

# set a limited stack size so DMTCP could work
ulimit -s 8192

# save coordinators host info in an environment variable
export DMTCP_COORD_HOST=$(hostname)

# ask for a uniqe port at runtime
export DMTCP_COORD_PORT=0

# checkpoint every eight hours
CKPT_WAIT_SEC=$(( 8 * 60 * 60 ))

# back up checkpoints every hour
BAK_WAIT_SEC=$(( 1 * 60 * 60 ))

echo "   DMTCP_COORD_HOST" $DMTCP_COORD_HOST
echo "   DMTCP_COORD_PORT" $DMTCP_COORD_PORT
echo "   CKPT_WAIT_SEC" $CKPT_WAIT_SEC
echo "   BAK_WAIT_SEC" $BAK_WAIT_SEC

################################################################################
echo "Do Work"
################################################################################
module purge; module load GCC/8.2.0-2.31.1 OpenMPI/3.1.3 HDF5/1.10.4;

# set up background loop
# so we always have at least one previous checkpoint and file state
# mkdir checkpoint_bak
# touch checkpoint_bak/init.dmtcp
# while true; do
#   echo "   BAK SLEEP" $(date)
#   sleep $BAK_WAIT_SEC
#   echo "   BAK WAKE" $(date)
#   # if we have a new checkpoint, shuffle the backups
#   if ! diff *.dmtcp checkpoint_bak/*.dmtcp; then
#     echo "   BAK BEGIN" $(date)
#     rm -rf checkpoint_bakbak
#     mv checkpoint_bak checkpoint_bakbak
#     mkdir checkpoint_bak
#     cp *.csv *.h5 *dmtcp* checkpoint_bak
#     echo "   BAK END" $(date)
#   fi
# done &

# run job with checkpointing
dmtcp_launch -i $CKPT_WAIT_SEC                                                 \
  ./dishtiny -SEED ${SEED} -ANIMATION_FREQUENCY 2097152                        \
  >run.log 2>&1

# when running job fails or finishes, kill the background loop
pkill -P $$

###############################################################################
echo "Done" $(date)
################################################################################
### CORE ###
# Core settings for DISHTINY

set NLEV 2                         # Number hierarchical resource levels

### PROGRAM_GROUP ###
# SignalGP program Settings

### HARDWARE_GROUP ###
# SignalGP Hardware Settings

### MUTATION_GROUP ###
# SignalGP Mutation Settings

### LOGISTICS ###
# logistics

set TREATMENT_DESCRIPTOR resource-wave__channelsense-yes__nlev-two       # Treatment identifying slug
### CORE ###
# Core settings for a DISHTINY level

set SIGNAL_RADIUS 24           # How far can a signal propagate?
set EVENT_RADIUS 6             # How far from the seed are harvests beneficial?
set HARVEST_VALUE 0.2         # How much resource benefit does a successful harvest grant?
